import{e as w,y as S,a as Q,l as ht}from"./cast-4d1aa82d.js";import{k as ft}from"./PopupTemplate-7c042eda.js";import{c as mt,w as Me,l as et,$ as Je,S as Ne,V as dt,L as pt,j as He,n as yt,m as gt,a as xt,o as It,d as wt}from"./fetchRasterInfo-68d3374e.js";import{s as De,a as M}from"./Error-9392329b.js";import{r as F,t as $,e as X,c as bt,i as St}from"./typedArrayUtil-c81d173a.js";import{O as Rt}from"./MultiOriginJSONSupport-55da1d06.js";import{v as vt,E as tt,a as Tt,w as _t}from"./promiseUtils-3ce2a460.js";import{l as Ft}from"./reactiveUtils-989a8d7f.js";import{v as it,T as kt}from"./ensureType-8c80e8c7.js";import{o as Ct}from"./enumeration-de0a766e.js";import{w as W,a as G,f as q,b as Pt,o as Mt}from"./Extent-52b65909.js";import{b as $t}from"./Layer-5bf3596f.js";import{p as Ot}from"./ArcGISService-78831401.js";import{n as Dt}from"./BlendLayer-1f4ade52.js";import{o as Bt}from"./CustomParametersMixin-6e258788.js";import"./geometry-8c15a791.js";import{U as rt,L as zt}from"./request-16c6134d.js";import{S as st}from"./arcgisLayerUrl-824ee458.js";import{f as nt,c as Et,a as Jt}from"./OperationalLayer-70e0771f.js";import{g as at,y as Nt,a as Ht,s as Lt,p as ot,h as Le,m as At,d as Ae,v as Wt}from"./multidimensionalUtils-ba984035.js";import{j as pe,p as lt}from"./TileInfo-3f2956cd.js";import{m as qt}from"./Promise-24c50191.js";import{S as jt,f as ye,T as Gt,r as We,u as ge,p as Ut,i as Be,j as Vt,l as Xt,q as Yt,N as Kt,U as Qt,R as Zt,s as Ie,B as ei,L as ti,D as ii}from"./RasterSymbolizer-dddafecd.js";import{a as qe,x as je,h as Ge,d as ri,m as si}from"./RawBlockCache-58aecfea.js";import{b as Te,c as ni,e as ai,f as oi,z as li,u as ci,d as ui,g as hi,R as fi,S as mi,m as di}from"./dataUtils-712d153e.js";import{T as Ue,U as we,j as Ve,o as Xe,n as pi,Q as _e,J as Fe,$ as yi,V as gi,C as xi}from"./rasterProjectionHelper-2f2082da.js";import{C as $e,f as Ii,i as wi,m as ze,c as bi,h as Si}from"./utils-522170cc.js";import{_ as Ri}from"./PortalLayer-d4941bb0.js";import{p as vi}from"./RefreshableLayer-2dcbbf25.js";import{t as Ti}from"./ScaleRangeLayer-a6967062.js";import{a as _i}from"./TemporalLayer-76f9669f.js";import{y as de}from"./Field-899dc481.js";import{x as ct}from"./FeatureSet-a47eef0a.js";import{h as Fi}from"./string-bf9c68ed.js";import{n as ki,z as Ci}from"./TilemapCache-c2266b63.js";import{p as Pi}from"./popupUtils-eff4732c.js";import"./nextTick-3ee5a785.js";import"./Clonable-ad03ca71.js";import"./Collection-54857936.js";import"./Evented-d69b5d66.js";import"./SimpleObservable-7e8b69a3.js";import"./fieldUtils-c41301b0.js";import"./preload-helper-41c905a7.js";import"./number-b98554af.js";import"./locale-30120714.js";import"./Identifiable-a49d7533.js";import"./Polyline-7f90e3cc.js";import"./jsonUtils-e2434b33.js";import"./workers-9e1006b9.js";import"./Connection-da262054.js";import"./Queue-4939205d.js";import"./assets-86d142ff.js";import"./intl-45f8f1a9.js";import"./messages-57170cca.js";import"./Color-46910694.js";import"./colorUtils-639f4d25.js";import"./mathUtils-505ef34b.js";import"./UniqueValueRenderer-adb2594e.js";import"./symbols-426355d5.js";import"./CIMSymbol-33f517af.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-a1e441cd.js";import"./aaBoundingBox-55a55434.js";import"./persistableUrlUtils-abff3ce1.js";import"./collectionUtils-cc5781ab.js";import"./Portal-fe1a007c.js";import"./Loadable-e19fba09.js";import"./PortalGroup-45834c06.js";import"./PortalUser-8de15b25.js";import"./LegendOptions-6e5321d3.js";import"./diffUtils-ba6273ab.js";import"./colorRamps-6cc98f16.js";import"./sizeVariableUtils-d4870b0d.js";import"./Graphic-b6696507.js";import"./compilerUtils-db2fe354.js";import"./lengthUtils-320ae102.js";import"./jsonUtils-dfa282b7.js";import"./layerUtils-394e7a48.js";import"./styleUtils-6ef1c49e.js";import"./normalizeUtils-08ce1e14.js";import"./normalizeUtilsCommon-42c6cdb7.js";import"./utils-285aaf9a.js";import"./asyncUtils-d59cad3c.js";import"./parser-7deabd3b.js";import"./mat4-63147b80.js";import"./ItemCache-28393d1d.js";import"./MemCache-c220a92a.js";import"./generateRendererUtils-f872a1df.js";import"./typeUtils-f38bdb16.js";import"./TimeExtent-0fb637c6.js";import"./ElevationInfo-5422702b.js";import"./aaBoundingRect-062d7c89.js";import"./colorUtils-c0f43caf.js";import"./projection-03688518.js";import"./zscale-92e5f59b.js";import"./PortalItem-d79345ac.js";import"./portalItemUtils-9126718d.js";import"./TimeReference-d5a14980.js";import"./datetime-b6333958.js";import"./fieldType-68c65bf7.js";import"./byteSizeEstimations-90c5a50d.js";import"./HandleOwner-1ffa4597.js";import"./LRUCache-7d328c48.js";const Ye=8,Mi=256;let U=class extends qt(ht){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const i=Ue();this.addResolvingPromise(i),await this.when()}normalizeCtorArgs(i){return i&&i.ioConfig&&(i={...i,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:pe.create(),...i.ioConfig}}),i}get _isGlobalWrappableSource(){const{rasterInfo:i}=this,e=we(i.spatialReference);return F(e)&&i.extent.width>=e/2}set url(i){this._set("url",st(i,De.getLogger(this.declaredClass)))}async open(i){throw new M("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(i,e,s,t={}){const r=t.tileInfo||this.rasterInfo.storageInfo.tileInfo,n=this.getTileExtentFromTileInfo(i,e,s,r);return this.fetchPixels(n,r.size[0],r.size[1],t)}async identify(i,e={}){var P;i=it(W,i).clone().normalize();const{multidimensionalDefinition:s,timeExtent:t}=e,{rasterInfo:r}=this,{hasMultidimensionalTranspose:n,multidimensionalInfo:a}=r;let{transposedVariableName:o}=e;const l=F(a)&&n&&(t!=null||at(s));l&&!o&&(o=F(s)&&s.length>0?s[0].variableName??void 0:a.variables[0].name,e={...e,transposedVariableName:o}),e=this._getRequestOptionsWithSliceId(e);const{spatialReference:c,extent:u}=r,{datumTransformation:h}=e;let f=Ve(i,c,h);if(!u.intersects(f))return{location:f,value:null};if(F(r.transform)){const O=r.transform.inverseTransform(f);if(!r.nativeExtent.intersects(O))return{location:O,value:null};f=O}let m=0;const p=F(o)&&F(a)&&r.hasMultidimensionalTranspose;if(this.datasetFormat==="Function"){const O=this.primaryRasters.rasters[0];if(p)return O.identify(f,e);const{pixelSize:H}=r,B=3,D=H.x*B/2,N=H.y*B/2,L=new G({xmin:f.x-D,xmax:f.x+D,ymin:f.y-N,ymax:f.y+N,spatialReference:c}),j={interpolation:"nearest"},{pixelBlock:J}=await O.fetchPixels(L,B,B,j),{pixelBlock:z}=await this.fetchPixels(L,B,B,j);if($(J))return{location:f,value:null};const Z=Math.floor(B*B*.5),xe=!J.mask||J.mask[Z]?J.pixels.map(ce=>ce[Z]):null;let le;return F(z)&&(le=!z.mask||z.mask[Z]?z.pixels.map(ce=>ce[Z]):void 0),{location:f,value:xe,processedValue:le,pyramidLevel:0}}if(!p){if(e.srcResolution)m=Xe(e.srcResolution,r,this.ioConfig.sampling).pyramidLevel;else if(m=await this.computeBestPyramidLevelForLocation(i,e),m==null)return{location:f,value:null}}const g=this.identifyPixelLocation(f,m,null,p);if(g===null)return{location:f,value:null};const{row:d,col:y,rowOffset:x,colOffset:I,blockWidth:v}=g,k=o??X(e.sliceId),_=qe(this.url,k),C=`${m}/${d}/${y}`;let T=je(_,null,C);$(T)&&(T=this.fetchRawTile(m,d,y,e),Ge(_,null,C,T));const R=await T;if($(R)||!((P=R.pixels)!=null&&P.length))return{location:f,value:null};const b=x*v+I;return this._processIdentifyResult(R,{srcLocation:f,position:b,pyramidLevel:m,useTransposedTile:!!p,requestSomeSlices:l,identifyOptions:e})}async fetchPixels(i,e,s,t={}){if(i=pi(i),(t=this._getRequestOptionsWithSliceId(t)).requestRawData)return this._fetchPixels(i,e,s,t);const r=we(i.spatialReference),n=_e(i);if($(r)||n===0||n===1&&this._isGlobalWrappableSource)return this._fetchPixels(i,e,s,t);if(n>=3)return{extent:i,pixelBlock:null};const a=[],{xmin:o,xmax:l}=i,c=Math.round(r/(l-o)*e),u=c-Math.round((r/2-o)/(l-o)*e);let h=0;const f=[];for(let d=0;d<=n;d++){const y=new G({xmin:d===0?o:-r/2,xmax:d===n?l-r*d:r/2,ymin:i.ymin,ymax:i.ymax,spatialReference:i.spatialReference}),x=d===0?c-u:d===n?e-h:c;h+=x,f.push(x);const I=t.disableWrapAround&&d>0?null:this._fetchPixels(y,x,s,t);a.push(I)}const m=(await Promise.all(a)).map(d=>d==null?void 0:d.pixelBlock);let p=null;const g={width:e,height:s};return this.rasterJobHandler?p=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:m,srcMosaicSize:g,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:f},t)).pixelBlock:p=Te(m,g,{blockWidths:f}),{extent:i,srcExtent:Fe(i,this.rasterInfo.spatialReference,t.datumTransformation),pixelBlock:p}}async fetchRawPixels(i,e,s,t={}){e={x:Math.floor(e.x),y:Math.floor(e.y)};const r=await this._fetchRawTiles(i,e,s,t),{nativeExtent:n,nativePixelSize:a,storageInfo:o}=this.rasterInfo,l=2**i,c=a.x*l,u=a.y*l,h=new G({xmin:n.xmin+c*e.x,xmax:n.xmin+c*(e.x+s.width-1),ymin:n.ymax-u*(e.y+s.height-1),ymax:n.ymax-u*e.y,spatialReference:n.spatialReference});if(!r)return{extent:h,srcExtent:h,pixelBlock:null};const{pixelBlocks:f,mosaicSize:m}=r;if(f.length===1&&F(f[0])&&f[0].width===s.width&&f[0].height===s.height)return{extent:h,srcExtent:h,pixelBlock:r.pixelBlocks[0]};const p=i>0?o.pyramidBlockWidth:o.blockWidth,g=i>0?o.pyramidBlockHeight:o.blockHeight,d={x:e.x%p,y:e.y%g};let y;return this.rasterJobHandler?y=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:f,srcMosaicSize:m,destDimension:s,clipOffset:d,clipSize:s,coefs:null,sampleSpacing:null,interpolation:t.interpolation,alignmentInfo:null,blockWidths:null},t)).pixelBlock:y=Te(f,m,{clipOffset:d,clipSize:s}),{extent:h,srcExtent:h,pixelBlock:y}}fetchRawTile(i,e,s,t){throw new M("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(i){return Fe(this.rasterInfo.extent,i)}decodePixelBlock(i,e){return!this.rasterJobHandler||e.useCanvas?jt(i,e):this.rasterJobHandler.decode({data:i,options:e})}async request(i,e,s=0){const{customFetchParameters:t}=this.ioConfig,{range:r,query:n,headers:a}=e;s=s??e.retryCount??this.ioConfig.retryCount;const o=r?{Range:`bytes=${r.from}-${r.to}`}:null;try{return await rt(i,{...e,query:{...n,...t},headers:{...a,...o}})}catch(l){if(s>0)return s--,this.request(i,e,s);throw l}}getSliceIndex(i){const{multidimensionalInfo:e}=this.rasterInfo;return $(e)||$(i)||i.length===0?null:Nt(i,e)}getTileExtentFromTileInfo(i,e,s,t){const r=bt(t.lodAt(i));return this.getTileExtent({x:r.resolution,y:r.resolution},e,s,t.origin,t.spatialReference,t.size)}updateTileInfo(){const{storageInfo:i,spatialReference:e,extent:s,pixelSize:t}=this.rasterInfo;if(!i.tileInfo){const r=[],n=i.maximumPyramidLevel||0;let a=Math.max(t.x,t.y),o=1/.0254*96*a;for(let c=0;c<=n;c++)r.push(new lt({level:n-c,resolution:a,scale:o})),a*=2,o*=2;const l=new W({x:s.xmin,y:s.ymax,spatialReference:e});i.tileInfo=new pe({origin:l,size:[i.blockWidth,i.blockHeight],spatialReference:e,lods:r}),i.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(i,e=512,s=512,t){const{width:r,height:n,nativeExtent:a,pixelSize:o,spatialReference:l}=i,c=new W({x:a.xmin,y:a.ymax,spatialReference:l});t==null&&(t=Math.max(0,Math.round(Math.log(Math.max(r,n))/Math.LN2-8)));const u=this.computeBlockBoundary(a,512,512,{x:a.xmin,y:a.ymax},[o],t);i.storageInfo=new ye({blockWidth:e,blockHeight:s,pyramidBlockWidth:e,pyramidBlockHeight:s,origin:c,firstPyramidLevel:1,maximumPyramidLevel:t,blockBoundary:u})}async computeBestPyramidLevelForLocation(i,e={}){return 0}computeBlockBoundary(i,e,s,t,r,n=0,a=2){if(r.length===1&&n>0){r=[...r];let{x:u,y:h}=r[0];for(let f=0;f<n;f++)u*=a,h*=a,r.push({x:u,y:h})}const o=[],{x:l,y:c}=t;for(let u=0;u<r.length;u++){const{x:h,y:f}=r[u];o.push({minCol:Math.floor((i.xmin-l+.1*h)/e/h),maxCol:Math.floor((i.xmax-l-.1*h)/e/h),minRow:Math.floor((c-i.ymax+.1*f)/s/f),maxRow:Math.floor((c-i.ymin-.1*f)/s/f)})}return o}getPyramidPixelSize(i){const{nativePixelSize:e}=this.rasterInfo,{pyramidResolutions:s,pyramidScalingFactor:t}=this.rasterInfo.storageInfo;if(i===0)return e;if(F(s)&&s.length)return s[i-1];const r=t**i;return{x:e.x*r,y:e.y*r}}identifyPixelLocation(i,e,s,t){const{spatialReference:r,nativeExtent:n,storageInfo:a}=this.rasterInfo,{maximumPyramidLevel:o,origin:l,transposeInfo:c}=a,u=t&&F(c)?c.tileSize[0]:a.blockWidth,h=t&&F(c)?c.tileSize[1]:a.blockHeight,f=Ve(i,r,s);if(!n.intersects(f)||e<0||e>o)return null;const m=this.getPyramidPixelSize(e),{x:p,y:g}=m,d=(l.y-f.y)/g/h,y=(f.x-l.x)/p/u,x=Math.min(h-1,Math.floor((d-Math.floor(d))*h)),I=Math.min(u-1,Math.floor((y-Math.floor(y))*u));return{pyramidLevel:e,row:Math.floor(d),col:Math.floor(y),rowOffset:x,colOffset:I,blockWidth:u,srcLocation:f}}getTileExtent(i,e,s,t,r,n){const[a,o]=n,l=t.x+s*a*i.x,c=l+a*i.x,u=t.y-e*o*i.y,h=u-o*i.y;return new G({xmin:l,xmax:c,ymin:h,ymax:u,spatialReference:r})}getBlockWidthHeight(i){return{blockWidth:i>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:i>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(i,e,s){const t=this.rasterInfo.storageInfo.blockBoundary[i];return!t||t.maxRow<e||t.maxCol<s||t.minRow>e||t.minCol>s}async _fetchPixels(i,e,s,t={}){let r=_e(i);if(r>=2)return{extent:i,pixelBlock:null};const n=this._getSourceDataInfo(i,e,s,t),{pyramidLevel:a,pyramidResolution:o,srcResolution:l,srcExtent:c,srcWidth:u,srcHeight:h}=n;if(u===0||h===0)return{extent:i,srcExtent:c,pixelBlock:null};const f=X(this.rasterInfo.transform),m=(f==null?void 0:f.type)==="gcs-shift",p=F(we(i.spatialReference));!m&&p||(r=_e(n.srcExtent,m));const g=this.rasterInfo.storageInfo,d={x:Math.floor((c.xmin-g.origin.x)/o.x+.1),y:Math.floor((g.origin.y-c.ymax)/o.y+.1)},y=await this._fetchRawTiles(a,d,{width:u,height:h,wrapCount:r},t);if(!y)return{extent:i,srcExtent:c,pixelBlock:null};const x=a>0?g.pyramidBlockWidth:g.blockWidth,I=a>0?g.pyramidBlockHeight:g.blockHeight,v=x===u&&I===h&&d.x%x==0&&d.y%I==0,k=new W({x:(i.xmax-i.xmin)/e,y:(i.ymax-i.ymin)/s,spatialReference:i.spatialReference}),_=!i.spatialReference.equals(this.rasterInfo.spatialReference),{datumTransformation:C}=t;if(!_&&v&&y.pixelBlocks.length===1&&x===e&&I===s&&l.x===k.x&&l.y===k.y)return{extent:i,srcExtent:c,pixelBlock:y.pixelBlocks[0]};const T=p&&F(we(c.spatialReference)),R=t.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");R&&!this.rasterJobHandler&&await Ue();const b=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:i,srcBufferExtent:y.extent,pixelSize:k.toJSON(),datumTransformation:C,rasterTransform:f,hasWrapAround:r>0||T,isAdaptive:this.ioConfig.optimizeProjectionAccuracy!==!1,includeGCSGrid:R},t):yi({projectedExtent:i,srcBufferExtent:y.extent,pixelSize:k,datumTransformation:C,rasterTransform:f,hasWrapAround:r>0||T,isAdaptive:!1,includeGCSGrid:R});let P;const O=!t.requestRawData,H={rows:b.spacing[0],cols:b.spacing[1]},B=X(this._getRasterTileAlignmentInfo(a,y.extent.xmin)),{pixelBlocks:D,mosaicSize:N,isPartiallyFilled:L}=y;let j=null;if(this.rasterJobHandler)({pixelBlock:P,localNorthDirections:j}=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:D,srcMosaicSize:N,destDimension:O?{width:e,height:s}:null,coefs:O?b.coefficients:null,sampleSpacing:O?H:null,projectDirections:R,gcsGrid:R?b.gcsGrid:null,isUV:this.rasterInfo.dataType==="vector-uv",interpolation:t.interpolation,alignmentInfo:B,blockWidths:null},t));else{const J=Te(D,N,{alignmentInfo:B});P=O?ni(J,{width:e,height:s},b.coefficients,H,t.interpolation):J,R&&b.gcsGrid&&(j=ai({width:e,height:s},b.gcsGrid),P=oi(P,this.rasterInfo.dataType,j))}return t.requestRawData||R?{srcExtent:c,pixelBlock:P,transformGrid:b,localNorthDirections:j,extent:i,isPartiallyFilled:L}:{srcExtent:c,extent:i,pixelBlock:P}}async _fetchRawTiles(i,e,s,t){const{origin:r,blockBoundary:n}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:o}=this.getBlockWidthHeight(i);let{x:l,y:c}=e,{width:u,height:h,wrapCount:f}=s;const m=this._getRasterTileAlignmentInfo(i,0);t.buffer&&(l-=t.buffer.cols,c-=t.buffer.rows,u+=2*t.buffer.cols,h+=2*t.buffer.rows);let p=0,g=0,d=0;f&&F(m)&&({worldColumnCountFromOrigin:g,originColumnOffset:d,rightPadding:p}=m,g*m.blockWidth-p>=l+u&&(p=0));const y=Math.floor(l/a),x=Math.floor(c/o),I=Math.floor((l+u+p-1)/a),v=Math.floor((c+h+p-1)/o),k=n[i];if(!k)return null;const{minRow:_,minCol:C,maxCol:T,maxRow:R}=k;if(f===0&&(v<_||I<C||x>R||y>T))return null;const b=new Array;let P=!1;const O=this.ioConfig.allowPartialFill==null?t.allowPartialFill:this.ioConfig.allowPartialFill;for(let J=x;J<=v;J++)for(let z=y;z<=I;z++){let Z=z;if(!t.disableWrapAround&&f&&F(m)&&g<=z&&(Z=z-g-d),J>=_&&Z>=C&&R>=J&&T>=Z){const xe=this._fetchRawTile(i,J,Z,t);O?b.push(new Promise(le=>{xe.then(ce=>le(ce)).catch(()=>{P=!0,le(null)})})):b.push(xe)}else b.push(Promise.resolve(null))}if(b.length===0)return null;const H=await Promise.all(b),B={height:(v-x+1)*o,width:(I-y+1)*a},{spatialReference:D}=this.rasterInfo,N=this.getPyramidPixelSize(i),{x:L,y:j}=N;return{extent:new G({xmin:r.x+y*a*L,xmax:r.x+(I+1)*a*L,ymin:r.y-(v+1)*o*j,ymax:r.y-x*o*j,spatialReference:D}),pixelBlocks:H,mosaicSize:B,isPartiallyFilled:P}}_fetchRawTile(i,e,s,t){const r=this.rasterInfo.storageInfo.blockBoundary[i];if(!r)return Promise.resolve(null);const{minRow:n,minCol:a,maxCol:o,maxRow:l}=r;if(e<n||s<a||e>l||s>o)return Promise.resolve(null);const c=qe(this.url,t.sliceId),u=`${i}/${e}/${s}`;let h=je(c,t.registryId,u);if($(h)){const f=new AbortController;h=this.fetchRawTile(i,e,s,{...t,signal:f.signal}),Ge(c,t.registryId,u,h,f),h.catch(()=>ri(c,t.registryId,u))}return t.signal&&vt(t,()=>{si(c,t.registryId,u)}),h}_computeMagDirValues(i){var l;const{bandCount:e,dataType:s}=this.rasterInfo;if(!(e===2&&s==="vector-magdir"||s==="vector-uv")||(i==null?void 0:i.length)!==2||!((l=i[0])!=null&&l.length))return null;const t=i[0].length;if(s==="vector-magdir"){const c=i[1].map(u=>(u+360)%360);return[i[0],c]}const[r,n]=i,a=[],o=[];for(let c=0;c<t;c++){const[u,h]=li([r[c],n[c]]);a.push(u),o.push(h)}return[a,o]}_getRasterTileAlignmentInfo(i,e){return this._rasterTileAlighmentInfo==null&&(this._rasterTileAlighmentInfo=gi(this.rasterInfo)),$(this._rasterTileAlighmentInfo.pyramidsInfo)?null:{startX:e,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[i]}}_getSourceDataInfo(i,e,s,t={}){const r={datumTransformation:t.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};t.srcResolution&&(r.srcResolution=t.srcResolution,this._updateSourceDataInfo(i,r));const n=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:a,srcHeight:o,pyramidLevel:l}=r,c=a/e,u=o/s,h=l<n&&c*u>=16,f=l===n&&this._requireTooManySrcTiles(a,o,e,s);if(h||f||a===0||o===0){const m=new W({x:(i.xmax-i.xmin)/e,y:(i.ymax-i.ymin)/s,spatialReference:i.spatialReference});let p=xi(m,this.rasterInfo.spatialReference,i,r.datumTransformation);const g=!p||t.srcResolution&&p.x+p.y<t.srcResolution.x+t.srcResolution.y;if(h&&t.srcResolution&&g){const d=Math.round(Math.log(Math.max(c,u))/Math.LN2)-1;if(n-l+3>=d){const y=2**d;p={x:t.srcResolution.x*y,y:t.srcResolution.y*y}}}p&&(r.srcResolution=p,this._updateSourceDataInfo(i,r))}return this._requireTooManySrcTiles(r.srcWidth,r.srcHeight,e,s)&&(r.srcWidth=0,r.srcHeight=0),r}_requireTooManySrcTiles(i,e,s,t){const{tileInfo:r}=this.rasterInfo.storageInfo;return Math.ceil(i/r.size[0])*Math.ceil(e/r.size[1])>=Mi||i/s>Ye||e/t>Ye}_updateSourceDataInfo(i,e){e.srcWidth=0,e.srcHeight=0;const s=this.rasterInfo.spatialReference,{srcResolution:t,datumTransformation:r}=e,{pyramidLevel:n,pyramidResolution:a,excessiveReading:o}=Xe(t,this.rasterInfo,this.ioConfig.sampling);if(o)return;let l=e.srcExtent||Fe(i,s,r);if(l==null)return;const c=X(this.rasterInfo.transform);c&&(l=c.inverseTransform(l)),e.srcExtent=l;const u=Math.ceil((l.xmax-l.xmin)/a.x-.1),h=Math.ceil((l.ymax-l.ymin)/a.y-.1);e.pyramidLevel=n,e.pyramidResolution=a,e.srcWidth=u,e.srcHeight=h}_getRequestOptionsWithSliceId(i){return F(this.rasterInfo.multidimensionalInfo)&&i.sliceId==null&&(i={...i,sliceId:this.getSliceIndex(i.multidimensionalDefinition)}),i}_processIdentifyResult(i,e){const{srcLocation:s,position:t,pyramidLevel:r,useTransposedTile:n}=e,a=i.pixels[0].length/i.width/i.height;if(!(!i.mask||i.mask[t]))return{location:s,value:null};const{multidimensionalInfo:o}=this.rasterInfo;if($(o)||!n){const d=i.pixels.map(I=>I[t]),y={location:s,value:d,pyramidLevel:r},x=this._computeMagDirValues(d.map(I=>[I]));return x!=null&&x.length&&(y.magdirValue=x.map(I=>I[0])),y}let l=i.pixels.map(d=>d.slice(t*a,t*a+a)),c=this._computeMagDirValues(l);const{requestSomeSlices:u,identifyOptions:h}=e;let f=Ht(o,h.transposedVariableName);if(u){const d=Lt(f,X(h.multidimensionalDefinition),X(h.timeExtent));l=l.map(y=>d.map(x=>y[x])),c=c==null?void 0:c.map(y=>d.map(x=>y[x])),f=d.map(y=>f[y])}const m=i.noDataValues||this.rasterInfo.noDataValue,p={pixels:l,pixelType:i.pixelType};let g;return F(m)&&(ci(p,m),g=p.mask),{location:s,value:null,dataSeries:f.map((d,y)=>{const x={value:(g==null?void 0:g[y])===0?null:l.map(I=>I[y]),multidimensionalDefinition:d.multidimensionalDefinition.map(I=>new ot({...I,isSlice:!0}))};return c!=null&&c.length&&(x.magdirValue=[c[0][y],c[1][y]]),x}),pyramidLevel:r}}};w([S()],U.prototype,"_rasterTileAlighmentInfo",void 0),w([S({readOnly:!0})],U.prototype,"_isGlobalWrappableSource",null),w([S(nt)],U.prototype,"url",null),w([S({type:String,json:{write:!0}})],U.prototype,"datasetName",void 0),w([S({type:String,json:{write:!0}})],U.prototype,"datasetFormat",void 0),w([S()],U.prototype,"hasUniqueSourceStorageInfo",void 0),w([S()],U.prototype,"rasterInfo",void 0),w([S()],U.prototype,"ioConfig",void 0),w([S()],U.prototype,"sourceJSON",void 0),U=w([Q("esri.layers.support.rasterDatasets.BaseRaster")],U);const ne=U;let te=class extends ne{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null}async open(e){var c,u;await this.init();const{rasterFunction:s}=this;(u=(c=this.primaryRasters)==null?void 0:c.rasters)!=null&&u.length?s.sourceRasters=this.primaryRasters.rasters:this.primaryRasters=s.getPrimaryRasters();const{rasters:t,rasterIds:r}=this.primaryRasters,n=t.map(h=>h.rasterInfo?void 0:h.open(e));await Promise.all(n);const a=t.map(({rasterInfo:h})=>h),o=s.bind({rasterInfos:a,rasterIds:r});if(!o.success||a.length===0)throw new M("raster-function:open",`cannot bind the function: ${o.error??""}`);await this.syncJobHandler();const l=a[0];this.hasUniqueSourceStorageInfo=a.length===1||a.slice(1).every(h=>this._hasSameStorageInfo(h,l)),this.set("sourceJSON",t[0].sourceJSON),this.set("rasterInfo",s.rasterInfo)}async syncJobHandler(){var e;return(e=this.rasterJobHandler)==null?void 0:e.updateRasterFunction(this.rasterFunction)}async fetchPixels(e,s,t,r={}){var f;const{rasters:n,rasterIds:a}=this.primaryRasters,o=n.map(m=>m.fetchPixels(e,s,t,r)),l=await Promise.all(o),c=l.map(m=>m.pixelBlock);if(r.skipRasterFunction||c.every(m=>$(m)))return l[0];const u=((f=l.find(m=>F(m.pixelBlock)))==null?void 0:f.extent)??e,h=this.rasterJobHandler?await this.rasterJobHandler.process({extent:u,primaryPixelBlocks:c,primaryRasterIds:a}):this.rasterFunction.process({extent:u,primaryPixelBlocks:c,primaryRasterIds:a});return{...l[0],pixelBlock:h}}_hasSameStorageInfo(e,s){const{storageInfo:t,pixelSize:r,spatialReference:n,extent:a}=e,{storageInfo:o,pixelSize:l,spatialReference:c,extent:u}=s;return r.x===l.x&&r.y===l.y&&n.equals(c)&&a.equals(u)&&t.blockHeight===o.blockHeight&&t.blockWidth===o.blockWidth&&t.maximumPyramidLevel===o.maximumPyramidLevel}};w([S({type:String,json:{write:!0}})],te.prototype,"datasetFormat",void 0),w([S()],te.prototype,"tileType",void 0),w([S()],te.prototype,"rasterFunction",void 0),w([S()],te.prototype,"primaryRasters",void 0),te=w([Q("esri.layers.support.rasterDatasets.FunctionRaster")],te);const Oe=te,Ke=De.getLogger("esri.layers.mixins.ImageryTileMixin"),$i=i=>{let e=class extends i{constructor(...t){var r,n;super(...t),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalSubset=null,this.raster=null,this.rasterFunction=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster=((n=(r=t[0])==null?void 0:r.raster)==null?void 0:n.datasetFormat)==="Function"}get fullExtent(){var t;return(t=this.rasterInfo)==null?void 0:t.extent}set multidimensionalDefinition(t){this._set("multidimensionalDefinition",t),this.updateRenderer()}get tileInfo(){var t;return(t=this.rasterInfo)==null?void 0:t.storageInfo.tileInfo}set url(t){this._set("url",st(t,Ke))}set renderer(t){this._set("renderer",t),this.updateRenderer()}async convertVectorFieldData(t,r){if($(t)||!this.rasterInfo)return null;const n=this._rasterJobHandler.instance,a=this.rasterInfo.dataType;return n?n.convertVectorFieldData({pixelBlock:t,dataType:a},r):ui(t,a)}async createFlowMesh(t,r){const n=this._rasterJobHandler.instance;return n?n.createFlowMesh(t,r):hi(t.meshType,t.simulationSettings,t.flowData,F(r.signal)?r.signal:new AbortController().signal)}normalizeRasterFetchOptions(t){var o,l;const{multidimensionalInfo:r}=this.rasterInfo??{};if($(r))return t;let n=t.multidimensionalDefinition||this.multidimensionalDefinition;!$(n)&&n.length||(n=Le(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const a=t.timeExtent||this.timeExtent;if(F(n)&&F(a)&&(F(a.start)||F(a.end))){n=n.map(y=>y.clone());const c=(l=(o=r.variables.find(({name:y})=>y===n[0].variableName))==null?void 0:o.dimensions)==null?void 0:l.find(({name:y})=>y==="StdTime"),u=n.find(({dimensionName:y})=>y==="StdTime");if(!c||!u)return{...t,multidimensionalDefinition:null};const{start:h,end:f}=a,m=$(h)?null:h.getTime(),p=$(f)?null:f.getTime(),g=m??p,d=p??m;if(F(c.values)){const y=c.values.filter(x=>{if(Array.isArray(x)){if(g===d)return x[0]<=g&&x[1]>=g;const I=x[0]<=g&&x[1]>g||x[0]<d&&x[1]>=d,v=x[0]>=g&&x[1]<=d||x[0]<g&&x[1]>d;return I||v}return g===d?x===g:x>=g&&x<=d});if(y.length){const x=y.sort((I,v)=>g===d?(I[0]??I)-(v[0]??v):Math.abs((I[1]??I)-d)-Math.abs((v[1]??v)-d))[0];u.values=[x]}else n=null}else if(c.hasRegularIntervals&&c.extent){const[y,x]=c.extent;g>x||d<y?n=null:u.values=g===d?[g]:[Math.max(y,g),Math.min(x,d)]}}return F(n)&&At(n,this.multidimensionalSubset)?{...t,multidimensionalDefinition:null}:{...t,multidimensionalDefinition:n}}async updateRasterFunction(){var u,h;if(this.type!=="imagery-tile"||!this.rasterFunction&&!this._cachedRasterFunctionJson||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;if(this._isConstructedFromFunctionRaster&&this.raster.datasetFormat==="Function"){const f=this.raster.rasterFunction.toJSON();return!this.rasterFunction&&f&&this._set("rasterFunction",Me.fromJSON(f)),void(this._cachedRasterFunctionJson=(u=this.rasterFunction)==null?void 0:u.toJSON())}let t,r=this.raster,n=!1;r.datasetFormat==="Function"?(t=r.primaryRasters.rasters,r=t[0],n=!0):t=[r];const{rasterFunction:a}=this;if(a){const f={raster:r};t.length>1&&t.forEach(g=>f[g.url]=g);const m=$e(a.rasterFunctionDefinition??a.toJSON(),f),p=new Oe({rasterFunction:m});p.rasterJobHandler=this._rasterJobHandler.instance,await p.open(),this._cachedRasterFunctionJson=(h=this.rasterFunction)==null?void 0:h.toJSON(),this.raster=p}else this.raster=r,this._cachedRasterFunctionJson=null;if(this._cachedRendererJson=null,!n&&!a)return;const{bandIds:o}=this,{bandCount:l}=this.raster.rasterInfo,c=o!=null&&o.length?o.some(f=>f>=l):l>=3;o&&(c||this.renderer.type!=="raster-stretch")&&this._set("bandIds",null),this._configDefaultRenderer("auto")}async updateRenderer(){var c;const{loaded:t,symbolizer:r}=this;if(!t||!r)return;const{rasterInfo:n}=this.raster,a=(c=Ae(n,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}))==null?void 0:c.name,o=Je({...this.renderer.toJSON(),variableName:a});if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(o))return;const l=this._rasterJobHandler.instance;l&&(r.rasterInfo=Ne(n,a),r.rendererJSON=o,r.bind(),await l.updateSymbolizer(r),this._cachedRendererJson=o)}async applyRenderer(t,r){const n=t&&t.pixelBlock;if(!(F(n)&&n.pixels&&n.pixels.length>0))return null;let a;await this.updateRenderer();const o=this._rasterJobHandler.instance,l=this.bandIds??[];return a=o?await o.symbolize({...t,simpleStretchParams:r,bandIds:l}):this.symbolizer.symbolize({...t,simpleStretchParams:r,bandIds:l}),a}getTileUrl(t,r,n){return this.raster.datasetFormat==="RasterTileServer"?`${this.url}/tile/${t}/${r}/${n}`:""}getCompatibleTileInfo(t,r,n=!1){if(!this.loaded||$(r))return null;if(n&&t.equals(this.spatialReference))return this.tileInfo;const a=Pt(t);return pe.create({size:256,spatialReference:t,origin:a?{x:a.origin[0],y:a.origin[1]}:{x:r.xmin,y:r.ymax}})}getCompatibleFullExtent(t){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(t)||(this._compatibleFullExtent=this.raster.computeExtent(t)),this._compatibleFullExtent):null}async fetchTile(t,r,n,a={}){if(s(this),a.requestAsImageElement){const l=this.getTileUrl(t,r,n);return rt(l,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:a.signal}).then(c=>c.data)}const{rasterInfo:o}=this;if(F(o.multidimensionalInfo)&&(a=this.normalizeRasterFetchOptions(a),$(a.multidimensionalDefinition))){const l=a.tileInfo||o.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(t,r,n,l),pixelBlock:null}}return await this._initJobHandler(),await this.updateRasterFunction(),this.renderer.type==="raster-shaded-relief"&&(a={...a,buffer:{cols:1,rows:1}}),this.raster.fetchTile(t,r,n,a)}async fetchPixels(t,r,n,a={}){return F(this.rasterInfo.multidimensionalInfo)&&(a=this.normalizeRasterFetchOptions(a),$(a.multidimensionalDefinition))?{extent:t,pixelBlock:null}:(await this._initJobHandler(),await this.updateRasterFunction(),this.raster.fetchPixels(t,r,n,a))}async identify(t,r={}){var l;const{raster:n,rasterInfo:a}=this;if(F(a.multidimensionalInfo)&&!(a.hasMultidimensionalTranspose&&(at(r.multidimensionalDefinition)||r.transposedVariableName||r.timeExtent))&&(r=this.normalizeRasterFetchOptions(r),$(r.multidimensionalDefinition)))return{location:t,value:null};const o=(l=this.multidimensionalSubset)==null?void 0:l.areaOfInterest;if(o&&!o.contains(t))throw new M("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return n.identify(t,r)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var a,o,l;const t=(a=this.rasterInfo)==null?void 0:a.multidimensionalInfo;if($(t)||((o=this.rasterInfo)==null?void 0:o.dataType)!=="standard-time")return!1;const r=this.multidimensionalDefinition,n=(l=r==null?void 0:r[0])==null?void 0:l.variableName;return t.variables.some(c=>c.name===n&&(!(r!=null&&r[0].dimensionName)||c.dimensions.some(u=>u.name==="StdTime")))}getStandardTimeValue(t){return new Date(24*(t-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(t){var n;const r=t??((n=this.rasterInfo)==null?void 0:n.multidimensionalInfo);return Wt(this.multidimensionalSubset,r)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=Le(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this._configDefaultRenderer()}_initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const t=new yt;return this._rasterJobHandler.connectionPromise=t.initialize().then(()=>{s(this),this._rasterJobHandler.instance=t,this.raster.rasterJobHandler=t,this.renderer&&this.updateRenderer(),this.raster.datasetFormat==="Function"&&this.raster.syncJobHandler()}).catch(()=>{}),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){var t;if(this.interpolation==null){s(this);const{raster:r}=this,n=dt(r.rasterInfo,r.tileType,(t=this.sourceJSON)==null?void 0:t.defaultResamplingMethod);this._set("interpolation",n)}}_configDefaultRenderer(t="no"){var c,u,h,f,m;s(this);const{rasterInfo:r}=this.raster;!this.bandIds&&r.bandCount>1&&(this.bandIds=pt(r));const n=(c=Ae(r,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}))==null?void 0:c.name;if(!this.renderer||t==="override"){const p=He(r,{bandIds:this.bandIds,variableName:n});this.raster.datasetFormat==="WCSServer"&&p.type==="raster-stretch"&&((((u=r.statistics)==null?void 0:u[0].max)??0)>1e24||(((h=r.statistics)==null?void 0:h[0].min)??0)<-1e24)&&(p.dynamicRangeAdjustment=!0,p.statistics=null,p.stretchType==="none"&&(p.stretchType="min-max")),this.renderer=p}const a=Je({...this.renderer.toJSON(),variableName:n}),o=Ne(r,n);this.symbolizer?(this.symbolizer.rendererJSON=a,this.symbolizer.rasterInfo=o):this.symbolizer=new Gt({rendererJSON:a,rasterInfo:o});const l=this.symbolizer.bind();if(l.success){if(t==="auto"){const{colormap:p}=this.raster.rasterInfo,g=this.renderer;if(F(p))if(g.type!=="raster-colormap")this._configDefaultRenderer("override");else{const d=He(this.raster.rasterInfo);JSON.stringify(d)!==JSON.stringify(g)&&this._configDefaultRenderer("override")}else if(g.type==="raster-stretch"){const d=(f=this.bandIds)==null?void 0:f.length,y=(m=g.statistics)==null?void 0:m.length;!g.dynamicRangeAdjustment&&y&&d&&y!==d&&this._configDefaultRenderer("override")}}}else Ke.warn("imagery-tile-mixin",l.error||"The given renderer is not supported by the layer."),t==="auto"&&this._configDefaultRenderer("override")}};function s(t){if(!t.raster||!t.rasterInfo)throw new M("imagery-tile","no raster")}return w([S()],e.prototype,"_cachedRendererJson",void 0),w([S()],e.prototype,"_cachedRasterFunctionJson",void 0),w([S()],e.prototype,"_compatibleFullExtent",void 0),w([S()],e.prototype,"_isConstructedFromFunctionRaster",void 0),w([S()],e.prototype,"_rasterJobHandler",void 0),w([S()],e.prototype,"bandIds",void 0),w([S({json:{origins:{service:{read:{source:"copyrightText"}}}}})],e.prototype,"copyright",void 0),w([S({json:{read:!1}})],e.prototype,"fullExtent",null),w([S()],e.prototype,"interpolation",void 0),w([S()],e.prototype,"ioConfig",void 0),w([S({type:[ot],json:{write:!0}})],e.prototype,"multidimensionalDefinition",null),w([S({type:mt,json:{write:!0}})],e.prototype,"multidimensionalSubset",void 0),w([S()],e.prototype,"raster",void 0),w([S({type:Me})],e.prototype,"rasterFunction",void 0),w([S()],e.prototype,"rasterInfo",void 0),w([S()],e.prototype,"sourceJSON",void 0),w([S({readOnly:!0,type:q,json:{read:!1}})],e.prototype,"spatialReference",void 0),w([S({json:{read:!1}})],e.prototype,"tileInfo",null),w([S(nt)],e.prototype,"url",null),w([S({types:et})],e.prototype,"renderer",null),w([S()],e.prototype,"symbolizer",void 0),e=w([Q("esri.layers.ImageryTileMixin")],e),e};function Oi(i){const e=i.fields,s=i.records,t=e.some(c=>c.name.toLowerCase()==="oid")?"OBJECTID":"OID",r=[{name:t,type:"esriFieldTypeOID",alias:"OID"}].concat(e.map(c=>({name:c.name,type:"esriFieldType"+c.typeName,alias:c.name}))),n=r.map(c=>c.name),a=[];let o=0,l=0;return s.forEach(c=>{const u={};for(u[t]=o++,l=1;l<n.length;l++)u[n[l]]=c[l-1];a.push({attributes:u})}),{displayFieldName:"",fields:r,features:a}}class ut{static get supportedVersions(){return[5]}static parse(e){const s=new DataView(e),t=3&s.getUint8(0);if(t!==3)return{header:{version:t},recordSet:null};const r=s.getUint32(4,!0),n=s.getUint16(8,!0),a=s.getUint16(10,!0),o={version:t,recordCount:r,headerByteCount:n,recordByteCount:a};let l=32;const c=[],u=[];let h;if(t===3){for(;s.getUint8(l)!==13;)h=String.fromCharCode(s.getUint8(l+11)).trim(),c.push({name:We(new Uint8Array(e,l,11)),type:h,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(h)],length:s.getUint8(l+16)}),l+=32;if(l+=1,c.length>0)for(;u.length<r&&e.byteLength-l>a;){const f=[];s.getUint8(l)===32?(l+=1,c.forEach(m=>{if(m.type==="C")f.push(We(new Uint8Array(e,l,m.length)).trim());else if(m.type==="N")f.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,l,m.length)).trim(),10));else if(m.type==="F")f.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,l,m.length)).trim()));else if(m.type==="D"){const p=String.fromCharCode.apply(null,new Uint8Array(e,l,m.length)).trim();f.push(new Date(parseInt(p.substring(0,4),10),parseInt(p.substring(4,6),10)-1,parseInt(p.substring(6,8),10)))}l+=m.length}),u.push(f)):l+=a}}return{header:o,fields:c,records:u,recordSet:Oi({fields:c,records:u})}}}const ie=new Map;ie.set("int16","esriFieldTypeSmallInteger"),ie.set("int32","esriFieldTypeInteger"),ie.set("int64","esriFieldTypeInteger"),ie.set("float32","esriFieldTypeSingle"),ie.set("float64","esriFieldTypeDouble"),ie.set("text","esriFieldTypeString");const Qe=8;let he=class extends ne{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:s}=await this.request(this.url+"/conf.json",{signal:e==null?void 0:e.signal});if(!this._validateHeader(s))throw new M("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:t,rasterInfo:r}=this._parseHeader(s);if(r.dataType==="thematic"){const n=await this._fetchAuxiliaryInformation();r.attributeTable=n}this._set("storageInfo",t),this._set("rasterInfo",r),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,s,t,r={}){const{transposeInfo:n}=this.rasterInfo.storageInfo,{transposedVariableName:a}=r,o=!(!n||!a),l=o?0:this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(l<0)return null;const c=this._buildCacheFilePath(l,s,t,r.multidimensionalDefinition,a),u=this._getIndexRecordFromBundle(s,t,o),h=await this.request(c,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:r.signal});if(!h)return null;const f=new Uint8Array(h.data),m=this._getTileEndAndContentType(f,u);if(m.recordSize===0)return null;const p=await this.request(c,{range:{from:m.position,to:m.position+m.recordSize},responseType:"array-buffer",signal:r.signal});if(!p)return null;const[g,d]=this._getTileSize(o);return this.decodePixelBlock(p.data,{width:g,height:d,planes:null,pixelType:null,returnInterleaved:o})}_validateHeader(e){const s=["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"];return e&&e.type==="RasterInfo"&&!s.some(t=>!e[t])}_parseHeader(e){var J;const s=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:t,histograms:r,colormap:n,blockWidth:a,blockHeight:o,firstPyramidLevel:l,maximumPyramidLevel:c}=e,u=e.statistics&&e.statistics.map(z=>({min:z.min,max:z.max,avg:z.mean,stddev:z.standardDeviation,median:z.median,mode:z.mode})),h=e.extent.spatialReference,f=(J=e.geodataXform)==null?void 0:J.spatialReference,m=new q(h!=null&&h.wkid||h!=null&&h.wkt?h:f);let p=new G({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:m});const g=new W({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:m}),d=Math.round((p.xmax-p.xmin)/g.x),y=Math.round((p.ymax-p.ymin)/g.y),x=this._parseTransform(e.geodataXform),I=x?p:null;x&&(p=x.forwardTransform(p),g.x=(p.xmax-p.xmin)/d,g.y=(p.ymax-p.ymin)/y);const v=e.properties??{},k=e.format.toLowerCase().replace("cache/",""),_=new W(e.origin.x,e.origin.y,m);let C,T,R,b;if(n&&n.colors)for(C=[],T=0;T<n.colors.length;T++)R=n.colors[T],b=n.values?n.values[T]:T,C.push([b,255&R,R<<16>>>24,R<<8>>>24,R>>>24]);const P=e.LODInfos,O=[];for(T=0;T<P.levels.length;T++)O.push(new lt({level:P.levels[T],resolution:P.resolutions[T],scale:96/.0254*P.resolutions[T]}));const H=new pe({dpi:96,lods:O,format:k,origin:_,size:[a,o],spatialReference:m}),B={recordSize:Qe,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*Qe+64},D=[{maxCol:Math.ceil(d/a)-1,maxRow:Math.ceil(y/o)-1,minCol:0,minRow:0}];let N=2;if(c>0)for(T=0;T<c;T++)D.push({maxCol:Math.ceil(d/N/a)-1,maxRow:Math.ceil(y/N/o)-1,minCol:0,minRow:0}),N*=2;const L=e.mdInfo;let j=null;if(L&&v._yxs){const z=v._yxs;j={packetSize:z.PacketSize,tileSize:[z.TileXSize,z.TileYSize]}}return{storageInfo:B,rasterInfo:new ge({width:d,height:y,pixelType:s,bandCount:t,extent:p,nativeExtent:I,transform:x,spatialReference:m,pixelSize:g,keyProperties:v,statistics:u,histograms:r,multidimensionalInfo:L,colormap:C,storageInfo:new ye({blockWidth:a,blockHeight:o,pyramidBlockWidth:a,pyramidBlockHeight:o,origin:_,tileInfo:H,transposeInfo:j,firstPyramidLevel:l,maximumPyramidLevel:c,blockBoundary:D})})}}_parseTransform(e){var t,r;if(!Ii(e))throw new M("cloudraster:open","the data contains unsupported geodata transform types");const s=wi(e);if(s.type==="identity")return null;if(s.type!=="polynomial"||!((t=s.forwardCoefficients)!=null&&t.length)||!((r=s.inverseCoefficients)!=null&&r.length))throw new M("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return s}async _fetchAuxiliaryInformation(e){const s=this.request(this.url+"/conf.vat.json",{signal:e}).then(a=>a.data).catch(()=>null),t=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then(a=>a.data).catch(()=>null),r=await Promise.all([s,t]);let n;if(r[0]){let a=r[0].fields;const o=r[0].values;if(a&&o){a=a.map(c=>({type:c.name==="OID"?"esriFieldTypeOID":ie.get(c.type),name:c.name,alias:c.alias||c.name}));const l=o.map(c=>({attributes:c}));a&&o&&(n={fields:a,features:l})}}return!n&&r[1]&&(n=ut.parse(r[1]).recordSet),ct.fromJSON(n)}_buildCacheFilePath(e,s,t,r,n){const a=this._getPackageSize(!!n),o=Math.floor(s/a)*a,l=Math.floor(t/a)*a,c="R"+this._toHexString4(o)+"C"+this._toHexString4(l);let u="L";u+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:h}=this.rasterInfo,f=r==null?void 0:r[0];if($(h)||!f)return`${this.url}/_alllayers/${u}/${c}.bundle`;let m="_yxs";if(!n){m=h.variables.find(d=>d.name===f.variableName).dimensions[0].values.indexOf(f.values[0]).toString(16);const g=4-m.length;for(let d=0;d<g;d++)m="0"+m;m="S"+m}const p=this._getVariableFolderName(n||f.variableName);return`${this.url}/_alllayers/${p}/${m}/${u}/${c}.bundle`}_getPackageSize(e=!1){const{transposeInfo:s}=this.rasterInfo.storageInfo;return e&&F(s)?s.packetSize??0:this.storageInfo.packetSize}_getTileSize(e=!1){const{storageInfo:s}=this.rasterInfo,{transposeInfo:t}=s;return e&&F(t)?t.tileSize:s.tileInfo.size}_getVariableFolderName(e){return(e=e.trim())===""?"_v":e.replace(/[\{|\}\-]/g,"_").replace("\\*","_v")}_getIndexRecordFromBundle(e,s,t=!1){const r=this._getPackageSize(t),n=r*(e%r)+s%r;if(n<0)throw new Error("Invalid level / row / col");return 20+n*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,s){const t=e.subarray(s,s+8);let r,n=0;for(r=0;r<5;r++)n|=(255&t[r])<<8*r;const a=0xffffffffff&n;for(n=0,r=5;r<8;r++)n|=(255&t[r])<<8*(r-5);return{position:a,recordSize:0xffffffffff&n}}_toHexString4(e){let s=e.toString(16);if(s.length!==4){let t=4-s.length;for(;t-- >0;)s="0"+s}return s}};w([S({readOnly:!0})],he.prototype,"storageInfo",void 0),w([S({type:String,json:{write:!0}})],he.prototype,"datasetFormat",void 0),he=w([Q("esri.layers.support.rasterDatasets.CloudRaster")],he);const Di=he;let fe=class extends ne{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.data=null}async open(i){await this.init();const e=this.data,{pixelBlock:s,statistics:t,histograms:r,name:n,keyProperties:a,nativeExtent:o,transform:l}=this.data,{width:c,height:u,pixelType:h}=s,f=e.extent??new G({xmin:-.5,ymin:.5,xmax:c-.5,ymax:u-.5,spatialReference:new q({wkid:3857})}),m=e.isPseudoSpatialReference??!e.extent,p={x:f.width/c,y:f.height/u},g=new ge({width:c,height:u,pixelType:h,extent:f,nativeExtent:o,transform:l,pixelSize:p,spatialReference:f.spatialReference,bandCount:s.pixels.length,keyProperties:a||{},statistics:t,isPseudoSpatialReference:m,histograms:r});this.createRemoteDatasetStorageInfo(g,512,512),this._set("rasterInfo",g),this.updateTileInfo(),await this._buildInMemoryRaster(s,{width:512,height:512},i),this.datasetName=n,this.url="/InMemory/"+n}fetchRawTile(i,e,s,t={}){const r=this._pixelBlockTiles.get(`${i}/${e}/${s}`);return Promise.resolve(r)}async _buildInMemoryRaster(i,e,s){var c,u;const t=this.rasterInfo.storageInfo.maximumPyramidLevel,r=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:i,tileSize:e,maximumPyramidLevel:t},s):Promise.resolve(fi(i,e,t)),n=F(this.rasterInfo.statistics),a=F(this.rasterInfo.histograms),o=n?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:i},s):Promise.resolve(Ut(i)),l=await tt([r,o]);if(!l[0].value&&l[1].value)throw new M("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=l[0].value,n||(this.rasterInfo.statistics=(c=l[1].value)==null?void 0:c.statistics),a||(this.rasterInfo.histograms=(u=l[1].value)==null?void 0:u.histograms)}};w([S({type:String,json:{write:!0}})],fe.prototype,"datasetFormat",void 0),w([S()],fe.prototype,"data",void 0),fe=w([Q("esri.layers.support.rasterDatasets.InMemoryRaster")],fe);const Bi=fe;function oe(i,e){if(!i||!e)return[];let s=e;e.includes("/")?(s=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const t=[];if(e){const n=oe(i,s);for(let a=0;a<n.length;a++)oe(n[a],e).forEach(o=>t.push(o));return t}const r=i.getElementsByTagNameNS("*",s);if(!r||r.length===0)return[];for(let n=0;n<r.length;n++)t.push(r[n]||r.item[n]);return t}function V(i,e){if(!i||!e)return null;let s=e;e.includes("/")?(s=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const t=oe(i,s);return t.length>0?e?V(t[0],e):t[0]:null}function K(i,e=null){const s=e?V(i,e):i;let t;return s?(t=s.textContent||s.nodeValue,t?t.trim():null):null}function zi(i,e){const s=oe(i,e),t=[];let r;for(let n=0;n<s.length;n++)r=s[n].textContent||s[n].nodeValue,r&&(r=r.trim(),r!==""&&t.push(r));return t}function be(i,e){return zi(i,e).map(s=>Number(s))}function se(i,e){const s=K(i,e);return Number(s)}function ke(i,e){var r;const s=(r=i==null?void 0:i.nodeName)==null?void 0:r.toLowerCase(),t=e.toLowerCase();return s.slice(s.lastIndexOf(":")+1)===t}function Ze(i,e){if(!i||!e)return null;const s=[];for(let t=0;t<i.length;t++)s.push(i[t]),s.push(e[t]);return s}function Ei(i){const e=V(i,"GeodataXform"),s=ve(se(e,"SpatialReference/WKID")||K(e,"SpatialReference/WKT"));if(e.getAttribute("xsi:type")!=="typens:PolynomialXform")return{spatialReference:s,transform:null};const t=se(e,"PolynomialOrder")??1,r=be(e,"CoeffX/Double"),n=be(e,"CoeffY/Double"),a=be(e,"InverseCoeffX/Double"),o=be(e,"InverseCoeffY/Double"),l=Ze(r,n),c=Ze(a,o);return{spatialReference:s,transform:l&&c&&l.length&&c.length?new ze({spatialReference:s,polynomialOrder:t,forwardCoefficients:l,inverseCoefficients:c}):null}}function Ji(i){var f;const e=se(i,"NoDataValue"),s=V(i,"Histograms/HistItem"),t=se(s,"HistMin"),r=se(s,"HistMax"),n=se(s,"BucketCount"),a=(f=K(s,"HistCounts"))==null?void 0:f.split("|").map(m=>Number(m));let o,l,c,u;oe(i,"Metadata/MDI").forEach(m=>{const p=Number(m.textContent??m.nodeValue);switch(m.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":o=p;break;case"STATISTICS_MAXIMUM":l=p;break;case"STATISTICS_MEAN":c=p;break;case"STATISTICS_STDDEV":u=p}});const h=se(i,"Metadata/SourceBandIndex");return{noDataValue:e,histogram:a!=null&&a.length&&t!=null&&r!=null?{min:t,max:r,size:n||a.length,counts:a}:null,sourceBandIndex:h,statistics:o!=null&&l!=null?{min:o,max:l,avg:c,stddev:u}:null}}function ve(i){if(!i)return null;let e=Number(i);if(!isNaN(e)&&e!==0)return new q({wkid:e});if((i=String(i)).startsWith("COMPD_CS")){if(!i.includes("VERTCS")||!i.includes("GEOGCS")&&!i.startsWith("PROJCS"))return null;const s=i.indexOf("VERTCS"),t=i.indexOf("PROJCS"),r=t>-1?t:i.indexOf("GEOGCS");if(r===-1)return null;const n=i.slice(r,i.lastIndexOf("]",s)+1).trim(),a=i.slice(s,i.lastIndexOf("]")).trim();e=Ce(n);const o=new q(e?{wkid:e}:{wkt:n}),l=Ce(a);return l&&(o.vcsWkid=l),o}return i.startsWith("GEOGCS")||i.startsWith("PROJCS")?(e=Ce(i),new q(e!==0?{wkid:e}:{wkt:i})):null}function Ce(i){var r;const e=i.replace(/\]/g,"[").replace(/\"/g,"").split("[").map(n=>n.trim()).filter(n=>n!==""),s=e[e.length-1].split(","),t=(r=s[0])==null?void 0:r.toLowerCase();if((t==="epsg"||t==="esri")&&i.endsWith('"]]')){const n=Number(s[1]);if(!isNaN(n)&&n!==0)return n}return 0}function Ee(i){var t;if(((t=i==null?void 0:i.documentElement.tagName)==null?void 0:t.toLowerCase())!=="pamdataset")return{};const e={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};i.documentElement.childNodes.forEach(r=>{if(r.nodeType===1){if(ke(r,"SRS")){if(!e.spatialReference){const n=K(r);e.spatialReference=ve(n)}}else if(ke(r,"Metadata"))if(r.getAttribute("domain")==="xml:ESRI"){const{spatialReference:n,transform:a}=Ei(r);e.transform=a,e.spatialReference||(e.spatialReference=n)}else oe(r,"MDI").forEach(n=>e.metadata[n.getAttribute("key")]=K(n));else if(ke(r,"PAMRasterBand")){const n=Ji(r);n.sourceBandIndex!=null&&e.rasterBands[n.sourceBandIndex]==null?e.rasterBands[n.sourceBandIndex]=n:e.rasterBands.push(n)}}});const s=e.rasterBands;if(s.length){const r=!!s[0].statistics;e.statistics=r?s.map(a=>a.statistics).filter(F):null;const n=!!s[0].histogram;e.histograms=n?s.map(a=>a.histogram).filter(F):null}return e}let Re=class extends ne{async open(i){await this.init();const e=await this._fetchData(i);let{spatialReference:s,statistics:t,histograms:r,transform:n}=await this._fetchAuxiliaryData(i);const a=!s;a&&(s=new q({wkid:3857})),r!=null&&r.length&&t==null&&(t=Be(r));const{width:o,height:l}=e;let c=new G({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:s});const u=n?n.forwardTransform(c):c;let h=!0;if(n){const m=n.forwardCoefficients;h=m&&m[1]===0&&m[2]===0,h&&(n=null,c=u)}const f=new Bi({data:{extent:u,nativeExtent:c,transform:n,pixelBlock:e,statistics:t,histograms:r,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a}});await f.open(),f.data=null,this._set("rasterInfo",f.rasterInfo),this._inMemoryRaster=f}fetchRawTile(i,e,s,t={}){return this._inMemoryRaster.fetchRawTile(i,e,s,t)}async _fetchData(i){const{data:e}=await this.request(this.url,{responseType:"array-buffer",signal:i==null?void 0:i.signal}),s=Vt(e).toUpperCase();if(s!=="JPG"&&s!=="PNG"&&s!=="GIF"&&s!=="BMP")throw new M("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",s);const t=s.toLowerCase(),r=t==="gif"||t==="bmp"||!Fi("ios"),n=await this.decodePixelBlock(e,{format:t,useCanvas:r,hasNoZlibMask:!0});if(n==null)throw new M("image-aux-raster:open","the data cannot be decoded");return n}async _fetchAuxiliaryData(i){var c;const e=X(i==null?void 0:i.signal),s=this.ioConfig.skipExtensions??[],t=s.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:e}),r=this.datasetFormat,n=r==="JPG"?"jgw":r==="PNG"?"pgw":r==="BMP"?"bpw":null,a=n&&s.includes(n)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+n,{responseType:"text",signal:e}),o=await tt([t,a]);if(e!=null&&e.aborted)throw Tt();const l=Ee((c=o[0].value)==null?void 0:c.data);if(!l.transform){const u=o[1].value?o[1].value.data.split(`
`).slice(0,6).map(h=>Number(h)):null;l.transform=(u==null?void 0:u.length)===6?new ze({forwardCoefficients:[u[4],u[5],u[0],-u[1],u[2],-u[3]]}):null}return l}};w([S({type:String,json:{write:!0}})],Re.prototype,"datasetFormat",void 0),Re=w([Q("esri.layers.support.rasterDatasets.ImageAuxRaster")],Re);const Se=Re;let me=class extends ne{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async open(e){var T,R;await this.init();const s=e&&e.signal,t=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:s});t.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const r=t.data;if(this.sourceJSON=r,!r)throw new M("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!r.tileInfo)throw new M("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const n=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=r.cacheType,this.tileType==null&&(n.includes(r.tileInfo.format.toLowerCase())?this.tileType="Map":r.tileInfo.format.toLowerCase()==="lerc"?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=((T=r.name)==null?void 0:T.slice(r.name.indexOf("/")+1))??"";const a=await this._fetchRasterInfo({signal:s});if($(a))throw new M("image-server-raster:open","cannot initialize image service");const o=this.tileType==="Map"?ki(r.tileInfo,r):pe.fromJSON(r.tileInfo);St(o);const[l,c]=this._computeMinMaxLOD(a,o),{extent:u,pixelSize:h}=a,f=.5/a.width*h.x,m=Math.max(h.x,h.y),{lods:p}=o;(this.tileType!=="Map"&&r.maxScale!==0||Math.abs(h.x-h.y)>f||!p.some(b=>Math.abs(b.resolution-m)<f))&&(h.x=h.y=l.resolution,a.width=Math.ceil((u.xmax-u.xmin)/h.x-.1),a.height=Math.ceil((u.ymax-u.ymin)/h.y-.1));const g=l.level-c.level,[d,y]=o.size,x=[],I=[];p.forEach((b,P)=>{b.level>=c.level&&b.level<=l.level&&x.push({x:b.resolution,y:b.resolution}),P<p.length-1&&I.push(Math.round(10*b.resolution/p[P+1].resolution)/10)}),x.sort((b,P)=>b.x-P.x);const v=this.computeBlockBoundary(u,d,y,o.origin,x,g),k=x.length>1?x.slice(1):null;let _;r.transposeInfo&&(_={tileSize:[r.transposeInfo.rows,r.transposeInfo.cols],packetSize:((R=a.keyProperties)==null?void 0:R._yxs.PacketSize)??0});const C=I.length<=1||I.length>=3&&I.slice(0,I.length-1).every(b=>b===I[0])?I[0]??2:Math.round(10/(c.resolution/l.resolution)**(-1/g))/10;if(a.storageInfo=new ye({blockWidth:o.size[0],blockHeight:o.size[1],pyramidBlockWidth:o.size[0],pyramidBlockHeight:o.size[1],pyramidResolutions:k,pyramidScalingFactor:C,compression:o.format,origin:o.origin,firstPyramidLevel:1,maximumPyramidLevel:g,tileInfo:o,transposeInfo:_,blockBoundary:v}),this._fixGCSShift(a),this._set("rasterInfo",a),r.capabilities.toLowerCase().includes("tilemap")){const b={tileInfo:a.storageInfo.tileInfo,parsedUrl:zt(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new Ci({layer:b})}}async fetchRawTile(e,s,t,r={}){const{storageInfo:n,extent:a}=this.rasterInfo,{transposeInfo:o}=n,l=F(o)&&!!r.transposedVariableName;if(this._slices&&!l&&r.sliceId==null)return null;const c=l?0:n.maximumPyramidLevel-e+this._levelOffset,u=`${this.url}/tile/${c}/${s}/${t}`,h=this._slices?l?{variable:r.transposedVariableName}:{sliceId:r.sliceId||0}:null,{data:f}=await this.request(u,{query:h,responseType:"array-buffer",signal:r.signal});if(!f)return null;const m=l?o.tileSize:n.tileInfo.size,p=await this.decodePixelBlock(f,{width:m[0],height:m[1],planes:null,pixelType:null,isPoint:this.tileType==="Elevation",returnInterleaved:l,noDataValue:X(this.rasterInfo.noDataValue)});if(p==null)return null;const g=n.blockBoundary[e];if(n.compression!=="jpg"||t>g.minCol&&t<g.maxCol&&s>g.minRow&&s<g.maxRow)return p;const{origin:d,blockWidth:y,blockHeight:x}=n,{x:I,y:v}=this.getPyramidPixelSize(e),k=Math.round((a.xmin-d.x)/I)%y,_=Math.round((a.xmax-d.x)/I)%y||y,C=Math.round((d.y-a.ymax)/v)%x,T=Math.round((d.y-a.ymin)/v)%x||x,R=t===g.minCol?k:0,b=s===g.minRow?C:0,P=t===g.maxCol?_:y,O=s===g.maxRow?T:x;return mi(p,{x:R,y:b},{width:P-R,height:O-b}),p}getSliceIndex(e){if(!this._slices||$(e)||e.length===0)return null;const s=e;for(let t=0;t<this._slices.length;t++){const r=this._slices[t].multidimensionalDefinition;if(r.length===s.length&&!r.some(n=>{const a=s.find(o=>n.variableName===o.variableName&&o.dimensionName===n.dimensionName);return a?(Array.isArray(n.values[0])?`${n.values[0][0]}-${n.values[0][1]}`:n.values[0])!==(Array.isArray(a.values[0])?`${a.values[0][0]}-${a.values[0][1]}`:a.values[0]):!0}))return t}return null}async fetchVariableStatisticsHistograms(e,s){const t=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:s}).then(a=>{var o;return(o=a.data)==null?void 0:o.statistics}),r=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:s}).then(a=>{var o;return(o=a.data)==null?void 0:o.histograms}),n=await Promise.all([t,r]);return n[0]&&n[0].forEach(a=>{a.avg=a.mean,a.stddev=a.standardDeviation}),{statistics:n[0]||null,histograms:n[1]||null}}async computeBestPyramidLevelForLocation(e,s={}){if(!this._tilemapCache)return 0;let t=this.identifyPixelLocation(e,0,X(s.datumTransformation));if(t===null)return null;let r=0;const{maximumPyramidLevel:n}=this.rasterInfo.storageInfo;let a=n-r+this._levelOffset;const o=t.srcLocation;for(;a>=0;){try{if(await this._tilemapCache.fetchAvailability(a,t.row,t.col,s)==="available")break}catch{}if(a--,r++,t=this.identifyPixelLocation(o,r,X(s.datumTransformation)),t===null)return null}return a===-1||t==null?null:r}async _fetchRasterInfo(e){const s=this.sourceJSON;if(this.tileType==="Map"){const o=s.fullExtent||s.extent,l=Math.ceil((o.xmax-o.xmin)/s.pixelSizeX-.1),c=Math.ceil((o.ymax-o.ymin)/s.pixelSizeY-.1),u=q.fromJSON(s.spatialReference||o.spatialReference),h=new W({x:s.pixelSizeX,y:s.pixelSizeY,spatialReference:u});return new ge({width:l,height:c,bandCount:3,extent:G.fromJSON(o),spatialReference:u,pixelSize:h,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:t}=e,r=gt(this.url,this.sourceJSON,{signal:t,query:this.ioConfig.customFetchParameters}),n=s.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:t}).then(o=>o.data&&o.data.slices).catch(()=>null):null,a=await Promise.all([r,n]);return this._slices=a[1],a[0]}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:s,spatialReference:t}=e;s.xmin>-1&&s.xmax>181&&(t!=null&&t.wkid)&&t.isGeographic&&(e.nativeExtent=e.extent,e.transform=new bi,e.extent=e.transform.forwardTransform(s))}_computeMinMaxLOD(e,s){const{pixelSize:t}=e,r=.5/e.width*t.x,{lods:n}=s,a=s.lodAt(Math.max.apply(null,n.map(m=>m.level))),o=s.lodAt(Math.min.apply(null,n.map(m=>m.level))),{tileType:l}=this;if(l==="Map")return this._levelOffset=n[0].level,[a,o];if(l==="Raster")return[n.find(m=>m.resolution===t.x)??a,o];const{minScale:c,maxScale:u}=this.sourceJSON;let h=a;u>0&&(h=n.find(m=>Math.abs(m.scale-u)<r),h||(h=n.filter(m=>m.scale>u).sort((m,p)=>m.scale>p.scale?1:-1)[0]??a));let f=o;return c>0&&(f=n.find(m=>Math.abs(m.scale-c)<r)??o,this._levelOffset=f.level-o.level),[h,f]}};w([S({type:String,json:{write:!0}})],me.prototype,"datasetFormat",void 0),w([S()],me.prototype,"tileType",void 0),me=w([Q("esri.layers.support.rasterDatasets.ImageServerRaster")],me);const Ni=me,Y=new Map;Y.set("Int8","s8"),Y.set("UInt8","u8"),Y.set("Int16","s16"),Y.set("UInt16","u16"),Y.set("Int32","s32"),Y.set("UInt32","u32"),Y.set("Float32","f32"),Y.set("Float64","f32"),Y.set("Double64","f32");const ee=new Map;ee.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),ee.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),ee.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),ee.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let ae=class extends ne{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(i){var g;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const e=i?X(i.signal):null,s=await this.request(this.url,{responseType:"xml",signal:e}),{rasterInfo:t,files:r}=this._parseHeader(s.data);if(((g=this.ioConfig.skipExtensions)==null?void 0:g.indexOf("aux.xml"))===-1){const d=await this._fetchAuxiliaryData(i);d!=null&&(t.statistics=d.statistics??t.statistics,t.histograms=d.histograms,d.histograms&&$(t.statistics)&&(t.statistics=Be(d.histograms)))}this._set("rasterInfo",t),this._files=r;const n=await this.request(r.index,{responseType:"array-buffer",signal:e});this._storageIndex=this._parseIndex(n.data);const{blockWidth:a,blockHeight:o}=this.rasterInfo.storageInfo,l=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:c,height:u}=this.rasterInfo,h=[],f=this._getBandSegmentCount();let m=0,p=-1;for(;m<this._storageIndex.length;){p++;const d=Math.ceil(c/a/l**p)-1,y=Math.ceil(u/o/l**p)-1;m+=(d+1)*(y+1)*f*4,h.push({maxRow:y,maxCol:d,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=h,p>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=p),this.updateTileInfo()}async fetchRawTile(i,e,s,t={}){const{blockWidth:r,blockHeight:n,blockBoundary:a}=this.rasterInfo.storageInfo,o=a[i];if(!o||o.maxRow<e||o.maxCol<s||o.minRow>e||o.minCol>s)return null;const{bandCount:l,pixelType:c}=this.rasterInfo,{ranges:u,actualTileWidth:h,actualTileHeight:f}=this._getTileLocation(i,e,s);if(!u||u.length===0)return null;if(u[0].from===0&&u[0].to===0){const R=new Uint8Array(r*n);return new di({width:r,height:n,pixels:null,mask:R,validPixelCount:0})}const{bandIds:m}=this.ioConfig,p=this._getBandSegmentCount(),g=[];let d=0;for(d=0;d<p;d++)(!m||m.indexOf[d]>-1)&&g.push(this.request(this._files.data,{range:{from:u[d].from,to:u[d].to},responseType:"array-buffer",signal:t.signal}));const y=await Promise.all(g),x=y.map(R=>R.data.byteLength).reduce((R,b)=>R+b),I=new Uint8Array(x);let v=0;for(d=0;d<p;d++)I.set(new Uint8Array(y[d].data),v),v+=y[d].data.byteLength;const k=ee.get(this.rasterInfo.storageInfo.compression).decoderFormat,_=await this.decodePixelBlock(I.buffer,{width:r,height:n,format:k,planes:(m==null?void 0:m.length)||l,pixelType:c});if(_==null)return null;if(F(this.rasterInfo.noDataValue)&&k!=="lerc"&&!_.mask){const R=this.rasterInfo.noDataValue[0];if(R!=null){const b=_.width*_.height,P=new Uint8Array(b);if(Math.abs(R)>1e24)for(d=0;d<b;d++)Math.abs((_.pixels[0][d]-R)/R)>1e-6&&(P[d]=1);else for(d=0;d<b;d++)_.pixels[0][d]!==R&&(P[d]=1);_.mask=P}}let C=0,T=0;if(h!==r||f!==n){let R=_.mask;if(R)for(d=0;d<n;d++)if(T=d*r,d<f)for(C=h;C<r;C++)R[T+C]=0;else for(C=0;C<r;C++)R[T+C]=0;else for(R=new Uint8Array(r*n),_.mask=R,d=0;d<f;d++)for(T=d*r,C=0;C<h;C++)R[T+C]=1}return _}_parseIndex(i){if(i.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let e,s,t,r,n,a;if(Xt){for(s=new Uint8Array(i),r=new ArrayBuffer(i.byteLength),t=new Uint8Array(r),n=0;n<i.byteLength/4;n++)for(a=0;a<4;a++)t[4*n+a]=s[4*n+3-a];e=new Uint32Array(r)}else e=new Uint32Array(i);return e}_getBandSegmentCount(){return ee.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(i,e,s){const{blockWidth:t,blockHeight:r,pyramidScalingFactor:n}=this.rasterInfo.storageInfo,{width:a,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let c,u,h,f=0,m=0;for(h=0;h<i;h++)m=n**h,c=Math.ceil(a/t/m),u=Math.ceil(o/r/m),f+=c*u;m=n**i,c=Math.ceil(a/t/m),u=Math.ceil(o/r/m),f+=e*c+s,f*=4*l;const p=this._storageIndex.subarray(f,f+4*l);let g=0,d=0;const y=[];for(let x=0;x<l;x++)g=p[4*x+0]*2**32+p[4*x+1],d=g+p[4*x+2]*2**32+p[4*x+3],y.push({from:g,to:d});return{ranges:y,actualTileWidth:s<c-1?t:Math.ceil(a/m)-t*(c-1),actualTileHeight:e<u-1?r:Math.ceil(o/m)-r*(u-1)}}_parseHeader(i){const e=V(i,"MRF_META/Raster");if(!e)throw new M("mrf:open","not a valid MRF format");const s=V(e,"Size"),t=parseInt(s.getAttribute("x"),10),r=parseInt(s.getAttribute("y"),10),n=parseInt(s.getAttribute("c"),10),a=(K(e,"Compression")||"none").toLowerCase();if(!ee.has(a))throw new M("mrf:open","currently does not support compression "+a);const o=K(e,"DataType")||"UInt8",l=Y.get(o);if(l==null)throw new M("mrf:open","currently does not support pixel type "+o);const c=V(e,"PageSize"),u=parseInt(c.getAttribute("x"),10),h=parseInt(c.getAttribute("y"),10),f=V(e,"DataValues");let m,p;if(f&&(p=f.getAttribute("NoData"),p!=null&&(m=p.trim().split(" ").map(P=>parseFloat(P)))),V(i,"MRF_META/CachedSource"))throw new M("mrf:open","currently does not support MRF referencing other data files");const g=V(i,"MRF_META/GeoTags"),d=V(g,"BoundingBox");let y,x=!1;if(d!=null){const P=parseFloat(d.getAttribute("minx")),O=parseFloat(d.getAttribute("miny")),H=parseFloat(d.getAttribute("maxx")),B=parseFloat(d.getAttribute("maxy")),D=K(g,"Projection")||"";let N=q.WGS84;if(D!=="LOCAL_CS[]")if(D.toLowerCase().startsWith("epsg:")){const L=Number(D.slice(5));isNaN(L)||L===0||(N=new q({wkid:L}))}else N=ve(D)??q.WGS84;else x=!0,N=new q({wkid:3857});y=new G(P,O,H,B),y.spatialReference=N}else x=!0,y=new G({xmin:-.5,ymin:.5-r,xmax:t-.5,ymax:.5,spatialReference:new q({wkid:3857})});const I=V(i,"MRF_META/Rsets"),v=parseInt(I&&I.getAttribute("scale")||"2",10),k=y.spatialReference,_=new ye({origin:new W({x:y.xmin,y:y.ymax,spatialReference:k}),blockWidth:u,blockHeight:h,pyramidBlockWidth:u,pyramidBlockHeight:h,compression:a,pyramidScalingFactor:v}),C=new W({x:y.width/t,y:y.height/r,spatialReference:k}),T=new ge({width:t,height:r,extent:y,isPseudoSpatialReference:x,spatialReference:k,bandCount:n,pixelType:l,pixelSize:C,noDataValue:m,storageInfo:_}),R=K(i,"datafile"),b=K(i,"IndexFile");return{rasterInfo:T,files:{mrf:this.url,index:b||this.url.replace(".mrf",".idx"),data:R||this.url.replace(".mrf",ee.get(a).blobExtension)}}}async _fetchAuxiliaryData(i){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:i==null?void 0:i.signal});return Ee(e)}catch{return null}}};w([S()],ae.prototype,"_files",void 0),w([S()],ae.prototype,"_storageIndex",void 0),w([S({type:String,json:{write:!0}})],ae.prototype,"datasetFormat",void 0),ae=w([Q("esri.layers.support.rasterIO.MRFRaster")],ae);const Hi=ae,Pe=(i,e)=>{var s;return(s=i.get(e))==null?void 0:s.values},ue=(i,e)=>{var s,t;return(t=(s=i.get(e))==null?void 0:s.values)==null?void 0:t[0]};let re=class extends ne{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(i){await this.init();const e=i?X(i.signal):null,{data:s}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:e});if(!s)throw new M("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:t,firstIFDPos:r,isBigTiff:n}=Yt(s),a=[];await this._readIFDs(a,s,t,r,0,n?8:4,e);const{imageInfo:o,rasterInfo:l}=this._parseIFDs(a),c=Kt(a),u=Qt(a);if(this._headerInfo={littleEndian:t,isBigTiff:n,ifds:a,pyramidIFDs:c,maskIFDs:u,...o},this._set("rasterInfo",l),!o.isSupported)throw new M("tiffraster:open","this tiff is not supported: "+o.message);if(!o.tileWidth)throw new M("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");const{skipExtensions:h=[]}=this.ioConfig;if(!h.includes("aux.xml")){const f=await this._fetchAuxiliaryMetaData(i);f!=null&&this._processPAMInfo(f,l)}h.includes("vat.dbf")||l.bandCount!==1||l.pixelType!=="u8"||(l.attributeTable=await this._fetchAuxiliaryTable(i),F(l.attributeTable)&&(l.keyProperties.DataType="thematic")),this.updateTileInfo()}async fetchRawTile(i,e,s,t={}){var n;if(!((n=this._headerInfo)!=null&&n.isSupported)||this.isBlockOutside(i,e,s))return null;const r=await this._fetchRawTiffTile(i,e,s,!1,t);if(F(r)&&this._headerInfo.hasMaskBand){const a=await this._fetchRawTiffTile(i,e,s,!0,t);F(a)&&a.pixels[0]instanceof Uint8Array&&(r.mask=a.pixels[0])}return r}_parseIFDs(i){var O,H;const e=Zt(i),{width:s,height:t,tileWidth:r,tileHeight:n,planes:a,pixelType:o,compression:l,firstPyramidLevel:c,maximumPyramidLevel:u,pyramidBlockWidth:h,pyramidBlockHeight:f,tileBoundary:m,affine:p,metadata:g}=e,d=((O=e.extent.spatialReference)==null?void 0:O.wkt)||((H=e.extent.spatialReference)==null?void 0:H.wkid);let y=ve(d),x=!!e.isPseudoGeographic;y==null&&(x=!0,y=new q({wkid:3857}));const I=new G({...e.extent,spatialReference:y}),v=new W(I?{x:I.xmin,y:I.ymax,spatialReference:y}:{x:0,y:0}),k=new ye({blockWidth:r,blockHeight:n,pyramidBlockWidth:h,pyramidBlockHeight:f,compression:l,origin:v,firstPyramidLevel:c,maximumPyramidLevel:u,blockBoundary:m}),_=new W({x:(I.xmax-I.xmin)/s,y:(I.ymax-I.ymin)/t,spatialReference:y}),C=g?{BandProperties:g.bandProperties,DataType:g.dataType}:{};let T=null;const R=ue(i[0],"PHOTOMETRICINTERPRETATION"),b=Pe(i[0],"COLORMAP");if(R<=3&&(b==null?void 0:b.length)>3&&b.length%3==0){T=[];const B=b.length/3;for(let D=0;D<B;D++)T.push([D,b[D]>>>8,b[D+B]>>>8,b[D+2*B]>>>8])}const P=new ge({width:s,height:t,bandCount:a,pixelType:o,pixelSize:_,storageInfo:k,spatialReference:y,isPseudoSpatialReference:x,keyProperties:C,extent:I,colormap:T,statistics:g?g.statistics:null});return p!=null&&p.length&&(P.nativeExtent=new G({xmin:-.5,ymin:.5-t,xmax:s-.5,ymax:.5,spatialReference:y}),P.transform=new ze({polynomialOrder:1,forwardCoefficients:[p[2]+p[0]/2,p[5]-p[3]/2,p[0],p[3],-p[1],-p[4]]}),P.extent=P.transform.forwardTransform(P.nativeExtent),P.pixelSize=new W({x:(I.xmax-I.xmin)/s,y:(I.ymax-I.ymin)/t,spatialReference:y}),k.origin.x=-.5,k.origin.y=.5),{imageInfo:e,rasterInfo:P}}_processPAMInfo(i,e){if(e.statistics=i.statistics??e.statistics,e.histograms=i.histograms,i.histograms&&$(e.statistics)&&(e.statistics=Be(i.histograms)),i.transform&&$(e.transform)){e.transform=i.transform,e.nativeExtent=e.extent;const s=e.transform.forwardTransform(e.nativeExtent);e.pixelSize=new W({x:(s.xmax-s.xmin)/e.width,y:(s.ymax-s.ymin)/e.height,spatialReference:e.spatialReference}),e.extent=s}e.isPseudoSpatialReference&&i.spatialReference&&(e.spatialReference=i.spatialReference)}async _readIFDs(i,e,s,t,r,n=4,a){if(!t)return null;(t>=e.byteLength||t<0)&&(e=(await this.request(this.url,{range:{from:t+r,to:t+r+this._bufferSize},responseType:"array-buffer",signal:a})).data,r=t+r,t=0);const o=await this._readIFD(e,s,t,r,Ie.TIFF_TAGS,n,a);if(i.push(o.ifd),!o.nextIFD)return null;await this._readIFDs(i,e,s,o.nextIFD-r,r,n,a)}async _readIFD(i,e,s,t,r=Ie.TIFF_TAGS,n=4,a){var l,c;if(!i)return null;const o=ei(i,e,s,t,r,n);if(o.success){const u=[];if((l=o.ifd)==null||l.forEach(h=>{h.values||u.push(h)}),u.length>0){const h=u.map(m=>m.offlineOffsetSize).filter(F),f=Math.min.apply(null,h.map(m=>m[0]));if(Math.min.apply(null,h.map(m=>m[0]+m[1]))-f<=this._bufferSize){const{data:m}=await this.request(this.url,{range:{from:f,to:f+this._bufferSize},responseType:"array-buffer",signal:a});i=m,t=f,u.forEach(p=>ti(i,e,p,t))}}if((c=o.ifd)!=null&&c.has("GEOKEYDIRECTORY")){const h=o.ifd.get("GEOKEYDIRECTORY"),f=h==null?void 0:h.values;if(f&&f.length>4){const m=f[0]+"."+f[1]+"."+f[2],p=await this._readIFD(i,e,h.valueOffset+6-t,t,Ie.GEO_KEYS,2,a);h.data=p.ifd,h.data&&h.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[m]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==i.byteLength)return(i=(await this.request(this.url,{range:{from:t,to:t+o.requiredBufferSize+4},responseType:"array-buffer",signal:a})).data).byteLength<o.requiredBufferSize?null:this._readIFD(i,e,0,t,Ie.TIFF_TAGS,4,a)}async _fetchRawTiffTile(i,e,s,t,r={}){const n=this._getTileLocation(i,e,s,t);if(!n)return null;const{ranges:a,actualTileWidth:o,actualTileHeight:l,ifd:c}=n,u=a.map(_=>this.request(this.url,{range:_,responseType:"array-buffer",signal:r.signal})),h=await Promise.all(u),f=h.map(_=>_.data.byteLength).reduce((_,C)=>_+C),m=h.length===1?h[0].data:new ArrayBuffer(f),p=[0],g=[0];if(h.length>1){const _=new Uint8Array(m);for(let C=0,T=0;C<h.length;C++){const R=h[C].data;_.set(new Uint8Array(R),T),p[C]=T,T+=R.byteLength,g[C]=R.byteLength}}const{blockWidth:d,blockHeight:y}=this.getBlockWidthHeight(i),x=await this.decodePixelBlock(m,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offsets:p,sizes:g},width:d,height:y,planes:null,pixelType:null});if(x==null)return null;let I,v,k;if(o!==d||l!==y){let _=x.mask;if(_)for(I=0;I<y;I++)if(k=I*d,I<l)for(v=o;v<d;v++)_[k+v]=0;else for(v=0;v<d;v++)_[k+v]=0;else for(_=new Uint8Array(d*y),x.mask=_,I=0;I<l;I++)for(k=I*d,v=0;v<o;v++)_[k+v]=1}return x}_getTileLocation(i,e,s,t=!1){const{firstPyramidLevel:r,blockBoundary:n}=this.rasterInfo.storageInfo,a=i===0?0:i-(r-1),{_headerInfo:o}=this;if(!o)return null;const l=t?o.maskIFDs[a]:a===0?o==null?void 0:o.ifds[0]:o==null?void 0:o.pyramidIFDs[a-1];if(!l)return null;const c=ii(l,o),u=Pe(l,"TILEOFFSETS");if(u===void 0)return null;const h=Pe(l,"TILEBYTECOUNTS"),{minRow:f,minCol:m,maxRow:p,maxCol:g}=n[a];if(e>p||s>g||e<f||s<m)return null;const d=ue(l,"IMAGEWIDTH"),y=ue(l,"IMAGELENGTH"),x=ue(l,"TILEWIDTH"),I=ue(l,"TILELENGTH"),v=c?this.rasterInfo.bandCount:1,k=v*e*(g+1)+s,_=[{from:u[k],to:u[k+v-1]+h[k+v-1]-1}];if(c){let R=!0;for(let b=0;b<v;b++)if(u[k+b]+h[k+b]!==u[k+b+1]){R=!1;break}if(!R)for(let b=0;b<v;b++)_[b]={from:u[k+b],to:u[k+b]+h[k+b]-1}}const C=u[k],T=h[k];return C==null||T==null?null:{ranges:_,ifd:l,actualTileWidth:s===g&&d%x||x,actualTileHeight:e===p&&y%I||I}}async _fetchAuxiliaryMetaData(i){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:i==null?void 0:i.signal});return Ee(e)}catch{return null}}async _fetchAuxiliaryTable(i){try{const{data:e}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:i==null?void 0:i.signal}),s=ut.parse(e);return s!=null&&s.recordSet?ct.fromJSON(s.recordSet):null}catch{return null}}};w([S()],re.prototype,"_files",void 0),w([S()],re.prototype,"_headerInfo",void 0),w([S()],re.prototype,"_bufferSize",void 0),w([S({type:String,json:{write:!0}})],re.prototype,"datasetFormat",void 0),re=w([Q("esri.layers.support.rasterDatasets.TIFFRaster")],re);const Li=re,A=new Map;A.set("CRF",{desc:"Cloud Raster Format",constructor:Di}),A.set("MRF",{desc:"Meta Raster Format",constructor:Hi}),A.set("TIFF",{desc:"GeoTIFF",constructor:Li}),A.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Ni}),A.set("JPG",{desc:"JPG Raster Format",constructor:Se}),A.set("PNG",{desc:"PNG Raster Format",constructor:Se}),A.set("GIF",{desc:"GIF Raster Format",constructor:Se}),A.set("BMP",{desc:"BMP Raster Format",constructor:Se});class Ai{static get supportedFormats(){const e=new Set;return A.forEach((s,t)=>e.add(t)),e}static async open(e){const{url:s,ioConfig:t,sourceJSON:r}=e;let n=e.datasetFormat;n==null&&s.lastIndexOf(".")&&(n=s.slice(s.lastIndexOf(".")+1).toUpperCase()),n==="OVR"||n==="TIF"?n="TIFF":n!=="JPG"&&n!=="JPEG"&&n!=="JFIF"||(n="JPG"),s.toLowerCase().includes("/imageserver")&&!s.toLowerCase().includes("/wcsserver")&&(n="RasterTileServer");const a={url:s,sourceJSON:r,datasetFormat:n,ioConfig:t??{bandIds:null,sampling:null}};let o,l;if(n&&this.supportedFormats.has(n)){if(n==="CRF"&&!(t!=null&&t.enableCRF))throw new M("rasterfactory:open",`cannot open raster: ${s}`);return o=A.get(n).constructor,l=new o(a),await l.open({signal:e.signal}),l}if(n)throw new M("rasterfactory:open","not a supported format "+n);const c=Array.from(A.keys());let u=0;const h=()=>(n=c[u++],n&&(n!=="CRF"||t!=null&&t.enableCRF)?(o=A.get(n).constructor,l=new o(a),l.open({signal:e.signal}).then(()=>l).catch(()=>h())):null);return h()}static register(e,s,t){A.has(e.toUpperCase())||A.set(e.toUpperCase(),{desc:s,constructor:t})}}let E=class extends Dt(Ti(Et(Ri(Bt($i(_i(Ot(vi(Rt($t)))))))))){constructor(...i){super(...i),this._primaryRasters=null,this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(i,e){return typeof i=="string"?{url:i,...e}:i}load(i){const e=F(i)?i.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},i).catch(_t).then(()=>this._openRaster(e))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var o;let i=[new de({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const{rasterInfo:e}=this,s=e==null?void 0:e.attributeTable,t=F(s)?s.fields:null,r="Raster.";if(t){const l=t.filter(c=>c.type!=="oid"&&c.name.toLowerCase()!=="value").map(c=>{const u=c.clone();return u.name=r+c.name,u});i=i.concat(l)}const n=e==null?void 0:e.dataType,a=e==null?void 0:e.multidimensionalInfo;if((n==="vector-magdir"||n==="vector-uv")&&F(a)){const l=(o=a.variables[0].unit)==null?void 0:o.trim(),c="Magnitude"+(l?` (${l})`:"");i.push(new de({name:"Raster.Magnitude",alias:c,domain:null,editable:!1,type:"double"})),i.push(new de({name:"Raster.Direction",alias:"Direction (°)",domain:null,editable:!1,type:"double"}))}return i}set renderer(i){this._set("renderer",i),this.updateRenderer()}readRenderer(i,e,s){const t=e&&e.layerDefinition&&e.layerDefinition.drawingInfo&&e.layerDefinition.drawingInfo.renderer,r=xt(t,s)||void 0;if(r!=null)return r}createPopupTemplate(i){return Pi({fields:this.rasterFields,title:this.title},i)}async generateRasterInfo(i,e){if(!(i=it(Me,i)))return this._primaryRasters[0].rasterInfo;try{const s={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(n=>s[n.url]=n);const t=$e(i.toJSON(),s),r=new Oe({rasterFunction:t});return await r.open(e),r.rasterInfo}catch{return null}}write(i,e){const{raster:s}=this;if(this.loaded?s.datasetFormat==="RasterTileServer"&&(s.tileType==="Raster"||s.tileType==="Map"):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(i,e);if(e&&e.messages){const t=`${e.origin}/${e.layerContainerType||"operational-layers"}`;e.messages.push(new M("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${t}'`,{layer:this}))}return null}async _openRaster(i){let e=!1;if(this.raster)this.raster.rasterInfo||await this.raster.open(),this.raster.datasetFormat==="Function"?(e=!0,this._primaryRasters=this.raster.primaryRasters.rasters):this._primaryRasters=[this.raster],this.url=this.raster.url;else{const{rasterFunction:t}=this,r=[this.url];t&&Si(t.toJSON(),r);const n=await Promise.all(r.map(o=>Ai.open({url:o,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:i}))),a=n.findIndex(o=>o==null);if(a>-1)throw new M("imagery-tile-layer:open",`cannot open raster: ${r[a]}`);if(this._primaryRasters=n,t){const o={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(u=>o[u.url]=u);const l=$e(t.rasterFunctionDefinition??t.toJSON(),o),c=new Oe({rasterFunction:l});try{await c.open(),this.raster=c}catch(u){const h=De.getLogger(this.declaredClass);u instanceof M&&h.error("imagery-tile-layer:open",u.message),h.warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=n[0]}}else this.raster=n[0]}const s=this.raster.rasterInfo;if(!s)throw new M("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("rasterInfo",e?s:this._primaryRasters[0].rasterInfo),this._set("spatialReference",s.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,this.sourceJSON!=null){const t=this.raster.tileType==="Map"&&this.sourceJSON.minLOD!=null&&this.sourceJSON.maxLOD!=null?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(t,{origin:"service"})}this.title||(this.title=this.raster.datasetName),this.raster.tileType==="Map"&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles(Ft(()=>this.customParameters,t=>{this.raster&&(this.raster.ioConfig.customFetchParameters=t)}))}};w([S()],E.prototype,"_primaryRasters",void 0),w([S({type:[kt],json:{write:{overridePolicy(){var i;return{enabled:!this.loaded||this.raster.tileType==="Raster"||((i=this.bandIds)==null?void 0:i.join(","))!=="0,1,2"}}}}})],E.prototype,"bandIds",void 0),w([S({json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.interpolation!=="bilinear"}}}}}),Ct(It)],E.prototype,"interpolation",void 0),w([S(Jt)],E.prototype,"legendEnabled",void 0),w([S({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],E.prototype,"isReference",void 0),w([S({type:["show","hide"]})],E.prototype,"listMode",void 0),w([S({json:{read:!0,write:!0}})],E.prototype,"blendMode",void 0),w([S()],E.prototype,"sourceJSON",void 0),w([S({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],E.prototype,"version",void 0),w([S({readOnly:!0,json:{read:!1}})],E.prototype,"type",void 0),w([S({type:["ArcGISTiledImageServiceLayer"]})],E.prototype,"operationalLayerType",void 0),w([S({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(i,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}},writer(i,e,s){e[s]=!i}}}})],E.prototype,"popupEnabled",void 0),w([S({type:ft,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}}}}})],E.prototype,"popupTemplate",void 0),w([S({readOnly:!0})],E.prototype,"defaultPopupTemplate",null),w([S({readOnly:!0,type:[de]})],E.prototype,"fields",void 0),w([S({readOnly:!0,type:[de]})],E.prototype,"rasterFields",null),w([S({types:et,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var e;const i=((e=this.renderer)==null?void 0:e.type)==="raster-stretch"&&this.renderer.stretchType==="none"&&!this.renderer.useGamma;return{enabled:!this.loaded||this.raster.tileType==="Raster"||!i}}},origins:{"web-scene":{types:wt,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:i=>({enabled:i&&i.type!=="vector-field"&&i.type!=="flow"})}}}}})],E.prototype,"renderer",null),w([Mt("renderer")],E.prototype,"readRenderer",null),E=w([Q("esri.layers.ImageryTileLayer")],E);const Ls=E;export{Ls as default};

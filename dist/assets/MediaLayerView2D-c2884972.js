import{e as x,y as D,a as Z}from"./cast-4d1aa82d.js";import"./geometry-8c15a791.js";import"./Graphic-4a228e99.js";import"./UniqueValueRenderer-16354145.js";import"./jsonUtils-4e342d8c.js";import"./symbols-0c3dfce8.js";import{j as ee}from"./Collection-54857936.js";import"./string-bf9c68ed.js";import{s as N,a as te}from"./Error-9392329b.js";import{r as re}from"./ensureType-8c80e8c7.js";import{r as b,G as ie,t as _}from"./typedArrayUtil-c81d173a.js";import{r as oe,j as se}from"./promiseUtils-3ce2a460.js";import{l as W,h as P,f as me,a as H}from"./reactiveUtils-989a8d7f.js";import{u as pe}from"./aaBoundingRect-062d7c89.js";import{b as ae,D as ne,a as le,F as he}from"./Extent-52b65909.js";import{j as ce,u as z}from"./perspectiveUtils-a75c1ea9.js";import"./request-429c0e66.js";import"./MagnifierPrograms-6c4af516.js";import{r as de}from"./Container-782a7f3a.js";import"./BufferPool-eeecbea6.js";import{T as ue}from"./enums-b1d611e3.js";import{c as fe,w as ye}from"./WGLContainer-12d66f96.js";import"./color-349a3ca2.js";import{P as _e,G as ve,L as ge,D as we,F as B}from"./enums-64ab819c.js";import{E as Re}from"./Texture-5c56cee1.js";import{r as Q}from"./context-util-2fc70f17.js";import"./ProgramTemplate-b518276b.js";import"./MaterialKey-8f458904.js";import"./utils-45a97d77.js";import{E as F,f as Ee}from"./VertexArrayObject-2b4e90de.js";import{f as T}from"./mathUtils-505ef34b.js";import"./StyleDefinition-7d58136b.js";import{t as Me}from"./vec2f32-eaf29605.js";import"./enums-fb086c25.js";import"./OrderIndependentTransparency-e1b3a745.js";import"./floatRGBA-90587fc5.js";import"./webgl-debug-b1f7a2c5.js";import"./GraphicsView2D-de279223.js";import"./AttributeStoreView-dcb739c3.js";import"./earcut-61f7b102.js";import"./featureConversionUtils-93a98860.js";import"./lengthUtils-320ae102.js";import{r as xe}from"./vec3f32-ad1dc57f.js";import{U as Te}from"./normalizeUtils-78f35d29.js";import"./asyncUtils-d59cad3c.js";import{y as be,r as Ce}from"./TileStrategy-cb3a7d25.js";import"./TileStore-4f504952.js";import"./TileKey-3acb01a1.js";import{e as Se}from"./mat3f64-221ce671.js";import{r as $e}from"./vec2-3a431caf.js";import{n as Ve}from"./vec2f64-22afc56f.js";import{c as Ge}from"./screenUtils-7afeb41c.js";import{r as Ae,i as qe,M as De,f as Pe,h as je}from"./mat3-5b850236.js";import{e as Ie}from"./mat3f32-6c416b1c.js";import{d as Ue}from"./MyMap-5b789db1.js";import{f as Le,u as Oe}from"./LayerView-44f9aaab.js";import"./nextTick-3ee5a785.js";import"./Polyline-7f90e3cc.js";import"./typeUtils-f38bdb16.js";import"./PopupTemplate-6b3c08c8.js";import"./Clonable-ad03ca71.js";import"./fieldUtils-7c95d0c6.js";import"./preload-helper-101896b7.js";import"./enumeration-de0a766e.js";import"./number-b98554af.js";import"./locale-30120714.js";import"./Identifiable-a49d7533.js";import"./jsonUtils-e2434b33.js";import"./LegendOptions-6e5321d3.js";import"./Color-46910694.js";import"./colorUtils-639f4d25.js";import"./diffUtils-ba6273ab.js";import"./Portal-4a02a9a8.js";import"./Loadable-e19fba09.js";import"./Promise-24c50191.js";import"./PortalGroup-45834c06.js";import"./PortalUser-bb0f9958.js";import"./colorRamps-6cc98f16.js";import"./opacityUtils-a1e441cd.js";import"./sizeVariableUtils-d4870b0d.js";import"./compilerUtils-db2fe354.js";import"./jsonUtils-beb5fd18.js";import"./layerUtils-c60873a1.js";import"./CIMSymbol-adda48ca.js";import"./persistableUrlUtils-ef87bc82.js";import"./styleUtils-0d4515e5.js";import"./DictionaryLoader-3797a46e.js";import"./LRUCache-7d328c48.js";import"./MemCache-c220a92a.js";import"./deprecate-0efb6d09.js";import"./heatmapUtils-74b8fd48.js";import"./vec4f64-aa64c7e9.js";import"./aaBoundingBox-55a55434.js";import"./collectionUtils-cc5781ab.js";import"./Evented-d69b5d66.js";import"./SimpleObservable-7e8b69a3.js";import"./projection-676f1424.js";import"./mat4-63147b80.js";import"./assets-2d98ef96.js";import"./zscale-92e5f59b.js";import"./normalizeUtilsSync-87c5ef07.js";import"./normalizeUtilsCommon-42c6cdb7.js";import"./_commonjsHelpers-2f3e7994.js";import"./ExpandedCIM-9a9f682e.js";import"./BidiEngine-836b7ef6.js";import"./GeometryUtils-53652037.js";import"./enums-4b2a86a0.js";import"./definitions-19bfb61c.js";import"./mat2d-795519e1.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-54fe414b.js";import"./rasterizingUtils-70e51e90.js";import"./pbf-9196f6ce.js";import"./GeometryUtils-dd03fc25.js";import"./imageutils-b82eeb3b.js";import"./Matcher-c9075c7b.js";import"./visualVariablesUtils-f202191f.js";import"./visualVariablesUtils-904a1f06.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-e8d830a5.js";import"./defaultsJSON-b087dd4d.js";import"./OptimizedFeature-6361f5d1.js";import"./devEnvironmentUtils-5002a058.js";import"./CircularArray-040b84c7.js";import"./HandleOwner-1ffa4597.js";import"./FeatureSetReader-0b7eb9fe.js";import"./arcadeTimeUtils-0a92beb1.js";import"./executionError-fb3f283a.js";import"./datetime-b6333958.js";import"./FieldsIndex-29a8df54.js";import"./TimeReference-d5a14980.js";import"./centroid-85944438.js";import"./parser-7deabd3b.js";import"./VertexElementDescriptor-2925c6af.js";import"./config-1337d16e.js";import"./basicInterfaces-b7051eb1.js";import"./projectionSupport-26ba0ab6.js";import"./json-48e3ea08.js";import"./labelingInfo-0e7e440a.js";import"./labelUtils-4db1d7ec.js";import"./schemaUtils-5cba5948.js";import"./serviceCapabilitiesUtils-bdb661e2.js";import"./arcgisLayerUrl-0567e8c8.js";import"./createSymbolSchema-8b7065b5.js";import"./rendererUtils-90c6d352.js";import"./capabilities-55572a33.js";import"./FeatureReductionLayer-398b84cc.js";import"./BlendLayer-1f4ade52.js";import"./TimeExtent-0fb637c6.js";import"./Query-8c2b9d22.js";import"./Field-899dc481.js";import"./fieldType-68c65bf7.js";import"./OperationalLayer-3f888de5.js";import"./ElevationInfo-280697dd.js";import"./util-54b675a7.js";import"./ComputedAttributeStorage-3b1fa8e7.js";import"./rbush-f2a85c98.js";import"./quickselect-56c5966e.js";import"./TiledDisplayObject-76821229.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./Queue-4939205d.js";import"./Basemap-983226f4.js";import"./loadAll-8b24919b.js";import"./PortalItem-8c677fd9.js";import"./messages-57170cca.js";import"./writeUtils-3ee09246.js";import"./CollectionFlattener-8de7cbfd.js";import"./TablesMixin-52c2dbd2.js";import"./Layer-3cc844b0.js";import"./Cyclical-e9c94d8a.js";import"./workers-6ae37cc2.js";import"./Connection-ee309efe.js";import"./intl-806fa328.js";import"./TileInfo-3f2956cd.js";import"./widget-f511f891.js";import"./uuid-73213768.js";import"./byteSizeEstimations-90c5a50d.js";import"./AttachmentInfo-12f14212.js";import"./AttachmentQuery-dffd8fdc.js";import"./utils-7a9e5fc6.js";import"./ItemCache-28393d1d.js";import"./executeQueryJSON-c58ecd81.js";import"./query-fc1b5d57.js";import"./pbfQueryUtils-718fed42.js";import"./queryZScale-22ca074d.js";import"./FeatureSet-b6c99b8e.js";import"./RelationshipQuery-80632d4c.js";import"./TopFeaturesQuery-e56e9bfe.js";import"./FeatureLayer-fc4ae836.js";import"./MultiOriginJSONSupport-55da1d06.js";import"./FeatureLayerBase-c8196cb0.js";import"./HeightModelInfo-a5f98ab4.js";import"./editsZScale-9447610d.js";import"./APIKeyMixin-35aced10.js";import"./ArcGISService-f48f70cb.js";import"./CustomParametersMixin-6e258788.js";import"./EditBusLayer-f379d91e.js";import"./OrderedLayer-9994883c.js";import"./PortalLayer-d69242c0.js";import"./portalItemUtils-6225971d.js";import"./RefreshableLayer-2dcbbf25.js";import"./ScaleRangeLayer-a6967062.js";import"./TemporalLayer-e1338658.js";import"./FeatureTemplate-136fba4c.js";import"./FeatureType-f3fd3327.js";import"./fieldProperties-d1a48384.js";import"./versionUtils-c26fc550.js";import"./styleUtils-30cd950e.js";import"./popupUtils-89cdd81e.js";import"./Scheduler-05bc8017.js";import"./GraphicsCollection-19c3233c.js";import"./ViewingMode-fb6259a5.js";import"./unitBezier-881ac1eb.js";import"./WebTileLayer-b1b21595.js";import"./imageBitmapUtils-86f741ce.js";import"./index-c5dc512b.js";const v=Se();class We extends de{constructor(e){super(),this.elementView=e,this.isWrapAround=!1,this.perspectiveTransform=Ve(),this._vertices=new Float32Array(20),this._handles=[],this._handles.push(W(()=>this.elementView.element.opacity,t=>this.opacity=t,P),W(()=>[this.elementView.coords],()=>{this.requestRender()},P),me(()=>this.elementView.element.loaded,()=>{const t=this.elementView.element;this.ready(),t.type==="video"&&b(t.content)&&this._handles.push(oe(t.content,"play",()=>this.requestRender()))},P)),e.element.load().catch(t=>{N.getLogger("esri.views.2d.layers.MediaLayerView2D").error(new te("element-load-error","Element cannot be displayed",{element:e,error:t}))})}destroy(){this._handles.forEach(e=>e.remove()),this.texture=ie(this.texture)}get dvsMat3(){return this.parent.dvsMat3}beforeRender(e){const{context:t}=e,i=this.elementView.element.content;if(b(i)){const o=i instanceof HTMLImageElement,s=i instanceof HTMLVideoElement,p=o?i.naturalWidth:s?i.videoWidth:i.width,m=o?i.naturalHeight:s?i.videoHeight:i.height;this._updatePerspectiveTransform(p,m),this.texture?s&&!i.paused&&(this.texture.setData(i),this.requestRender(),(t.type===Q.WEBGL2||T(p)&&T(m))&&this.texture.generateMipmap()):(this.texture=new Re(t,{pixelFormat:_e.RGBA,dataType:ve.UNSIGNED_BYTE,samplingMode:ge.LINEAR,wrapMode:we.CLAMP_TO_EDGE,width:p,height:m,preMultiplyAlpha:!0},i),(t.type===Q.WEBGL2||T(p)&&T(m))&&this.texture.generateMipmap(),s&&!i.paused&&this.requestRender())}super.beforeRender(e)}_createTransforms(){return null}updateDrawCoords(e,t){const i=this.elementView.coords;if(_(i))return;const[o,s,p,m]=i.rings[0],c=this._vertices,{x:a,y:n}=e,d=t!==0;d?c.set([s[0]-a,s[1]-n,o[0]-a,o[1]-n,p[0]-a,p[1]-n,m[0]-a,m[1]-n,m[0]-a,m[1]-n,s[0]+t-a,s[1]-n,s[0]+t-a,s[1]-n,o[0]+t-a,o[1]-n,p[0]+t-a,p[1]-n,m[0]+t-a,m[1]-n]):c.set([s[0]-a,s[1]-n,o[0]-a,o[1]-n,p[0]-a,p[1]-n,m[0]-a,m[1]-n]),this.isWrapAround=d}getVAO(e,t,i){if(_(this.elementView.coords))return null;const o=this._vertices;if(this._vao)this._geometryVbo.setData(o);else{this._geometryVbo=F.createVertex(e,B.DYNAMIC_DRAW,o);const s=F.createVertex(e,B.STATIC_DRAW,new Uint16Array([0,0,0,1,1,0,1,1,1,1,0,0,0,0,0,1,1,0,1,1]));this._vao=new Ee(e,i,t,{geometry:this._geometryVbo,tex:s})}return this._vao}_updatePerspectiveTransform(e,t){const i=this._vertices;ce(v,[0,0,e,0,0,t,e,t],[i[0],i[1],i[4],i[5],i[2],i[3],i[6],i[7]]),$e(this.perspectiveTransform,v[6]/v[8]*e,v[7]/v[8]*t)}}class He extends fe{constructor(){super(...arguments),this._localOrigin=Ge(0,0),this._viewStateId=-1,this._dvsMat3=Ie(),this.requiresDedicatedFBO=!1}get dvsMat3(){return this._dvsMat3}beforeRender(e){this._updateMatrices(e),this._updateOverlays(e,this.children);for(const t of this.children)t.beforeRender(e)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"overlay",brushes:[ye.overlay],target:()=>this.children,drawPhase:ue.MAP});return[...super.prepareRenderPasses(e),t]}_updateMatrices(e){const{state:t}=e,{id:i,size:o,pixelRatio:s,resolution:p,rotation:m,viewpoint:c,displayMat3:a}=t;if(this._viewStateId===i)return;const n=Math.PI/180*m,d=s*o[0],f=s*o[1],{x:C,y:w}=c.targetGeometry,S=Te(C,t.spatialReference);this._localOrigin.x=S,this._localOrigin.y=w;const $=p*d,R=p*f,l=Ae(this._dvsMat3);qe(l,l,a),De(l,l,Me(d/2,f/2)),Pe(l,l,xe(d/$,-f/R,1)),je(l,l,-n),this._viewStateId=i}_updateOverlays(e,t){const{state:i}=e,{rotation:o,spatialReference:s,worldScreenWidth:p,size:m,viewpoint:c}=i,a=this._localOrigin;let n=0;const d=ae(s);if(d&&s.isWrappable){const f=m[0],C=m[1],w=180/Math.PI*o,S=Math.abs(Math.cos(w)),$=Math.abs(Math.sin(w)),R=Math.round(f*S+C*$),[l,V]=d.valid,u=Ue(s),{x:j,y:Y}=c.targetGeometry,J=[j,Y],G=[0,0];i.toScreen(G,J);const E=[0,0];let A;A=R>p?.5*p:.5*R;const I=Math.floor((j+.5*u)/u),K=l+I*u,X=V+I*u,q=[G[0]+A,0];i.toMap(E,q),E[0]>X&&(n=u),q[0]=G[0]-A,i.toMap(E,q),E[0]<K&&(n=-u);for(const M of t){const U=M.elementView.bounds;if(_(U))continue;const[L,,O]=U;L<l&&O>l?M.updateDrawCoords(a,u):O>V&&L<V?M.updateDrawCoords(a,-u):M.updateDrawCoords(a,n)}}else for(const f of t)f.updateDrawCoords(a,n)}}let y=class extends Le(Oe){constructor(){super(...arguments),this._overlayContainer=null,this._fetchQueue=null,this._tileStrategy=null,this._elementReferences=new Map,this._debugGraphicsView=null,this.layer=null,this.elements=new ee}attach(){this.addAttachHandles([H(()=>this.layer.effectiveSource,"refresh",()=>{for(const r of this._tileStrategy.tiles)this._updateTile(r);this.requestUpdate()}),H(()=>this.layer.effectiveSource,"change",({element:r})=>this._elementUpdateHandler(r))]),this._overlayContainer=new He,this.container.addChild(this._overlayContainer),this._fetchQueue=new be({tileInfoView:this.view.featuresTilingScheme,concurrency:10,process:(r,e)=>this._queryElements(r,e)}),this._tileStrategy=new Ce({cachePolicy:"purge",resampling:!0,acquireTile:r=>this._acquireTile(r),releaseTile:r=>this._releaseTile(r),tileInfoView:this.view.featuresTilingScheme}),this.requestUpdate()}detach(){var r;this.elements.removeAll(),this._tileStrategy.destroy(),this._fetchQueue.destroy(),this._overlayContainer.removeAllChildren(),this.container.removeAllChildren(),this._elementReferences.clear(),(r=this._debugGraphicsView)==null||r.destroy()}supportsSpatialReference(r){return!0}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}update(r){var e;this._tileStrategy.update(r),(e=this._debugGraphicsView)==null||e.update(r)}async hitTest(r,e){const t=[],i=r.normalize(),o=[i.x,i.y];for(const{projectedElement:{normalizedCoords:s,element:p}}of this._elementReferences.values())b(s)&&ne(s.rings,o)&&t.push({type:"media",element:p,layer:this.layer,mapPoint:r});return t.reverse()}canResume(){return this.layer.source!=null&&super.canResume()}async doRefresh(){this._fetchQueue.reset(),this._tileStrategy.tiles.forEach(r=>this._updateTile(r))}_acquireTile(r){const e=new ze(r.clone());return this._updateTile(e),e}_updateTile(r){this.updatingHandles.addPromise(this._fetchQueue.push(r.key).then(e=>{const[t,i]=r.setElements(e);this._referenceElements(r,t),this._dereferenceElements(r,i),this.requestUpdate()},e=>{se(e)||N.getLogger(this.declaredClass).error(e)}))}_releaseTile(r){this._fetchQueue.abort(r.key.id),r.elements&&this._dereferenceElements(r,r.elements),this.requestUpdate()}async _queryElements(r,e){const t=this.layer.effectiveSource;if(_(t))return[];this.view.featuresTilingScheme.getTileBounds(h,r,!0);const i=new le({xmin:h[0],ymin:h[1],xmax:h[2],ymax:h[3],spatialReference:this.view.spatialReference});return t.queryElements(i,e)}_referenceElements(r,e){const t=this.layer.source;if(!_(t))for(const i of e)this._referenceElement(r,i)}_referenceElement(r,e){re(this._elementReferences,e.uid,()=>{const t=new z({element:e,spatialReference:this.view.spatialReference}),i=new We(t);return this._overlayContainer.addChild(i),this.elements.add(e),{tiles:new Set,projectedElement:t,overlay:i,debugGraphic:null}}).tiles.add(r)}_dereferenceElements(r,e){for(const t of e)this._dereferenceElement(r,t)}_dereferenceElement(r,e){var i;const t=this._elementReferences.get(e.uid);t.tiles.delete(r),t.tiles.size||(this._overlayContainer.removeChild(t.overlay),t.overlay.destroy(),t.projectedElement.destroy(),this._elementReferences.delete(e.uid),this.elements.remove(e),(i=this._debugGraphicsView)==null||i.graphics.remove(t.debugGraphic))}_elementUpdateHandler(r){var i;let e=this._elementReferences.get(r.uid);if(e){const o=e.projectedElement.normalizedCoords;if(_(o))return this._overlayContainer.removeChild(e.overlay),e.overlay.destroy(),e.projectedElement.destroy(),this._elementReferences.delete(r.uid),this.elements.remove(r),void((i=this._debugGraphicsView)==null?void 0:i.graphics.remove(e.debugGraphic));const s=[],p=[];for(const m of this._tileStrategy.tiles){const c=k(this.view.featuresTilingScheme,m,o);e.tiles.has(m)?c||p.push(m):c&&s.push(m)}for(const m of s)this._referenceElement(m,r);for(const m of p)this._dereferenceElement(m,r);return e=this._elementReferences.get(r.uid),void((e==null?void 0:e.debugGraphic)&&(e.debugGraphic.geometry=e.projectedElement.normalizedCoords,this._debugGraphicsView.graphicUpdateHandler({graphic:e.debugGraphic,property:"geometry"})))}const t=new z({element:r,spatialReference:this.view.spatialReference}).normalizedCoords;if(b(t))for(const o of this._tileStrategy.tiles)k(this.view.featuresTilingScheme,o,t)&&this._referenceElement(o,r)}};x([D()],y.prototype,"_fetchQueue",void 0),x([D()],y.prototype,"layer",void 0),x([D({readOnly:!0})],y.prototype,"elements",void 0),y=x([Z("esri.views.2d.layers.MediaLayerView2D")],y);const h=pe(),g={xmin:0,ymin:0,xmax:0,ymax:0};function k(r,e,t){return r.getTileBounds(h,e.key,!0),g.xmin=h[0],g.ymin=h[1],g.xmax=h[2],g.ymax=h[3],he(g,t)}class ze{constructor(e){this.key=e,this.elements=null,this.isReady=!1,this.visible=!0}setElements(e){const t=[],i=new Set(this.elements);this.elements=e;for(const o of e)i.has(o)?i.delete(o):t.push(o);return this.isReady=!0,[t,Array.from(i)]}destroy(){}}const Qo=y;export{Qo as default};

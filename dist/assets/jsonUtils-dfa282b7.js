import{x as c,f as d,h as y,m as w,d as C,y as h,n as x,S as I,e as $,b as D,c as L,g as M,k,i as v}from"./symbols-426355d5.js";import{a as b}from"./Error-9392329b.js";import{r as f,t as T}from"./typedArrayUtil-c81d173a.js";import{u as F}from"./layerUtils-394e7a48.js";const a={retainId:!1,ignoreDrivers:!1,hasLabelingContext:!0};function P(e,s=a){var i,p;if(!e)return{symbol:null};const{retainId:r=a.retainId,ignoreDrivers:o=a.ignoreDrivers,hasLabelingContext:t=a.hasLabelingContext,retainCIM:m=a.retainCIM}=s;let n=null;if(c(e)||e instanceof d)n=e.clone();else if(e.type==="cim"){const l=(p=(i=e.data)==null?void 0:i.symbol)==null?void 0:p.type;if(l!=="CIMPointSymbol")return{error:new b("symbol-conversion:unsupported-cim-symbol",`CIM symbol of type '${l||"unknown"}' is unsupported in 3D`,{symbol:e})};n=m?e.clone():y.fromCIMSymbol(e)}else if(e instanceof w)n=C.fromSimpleLineSymbol(e);else if(e instanceof h)n=y.fromSimpleMarkerSymbol(e);else if(e instanceof x)n=y.fromPictureMarkerSymbol(e);else if(e instanceof I)n=s.geometryType&&s.geometryType==="mesh"?$.fromSimpleFillSymbol(e):D.fromSimpleFillSymbol(e);else{if(!(e instanceof L))return{error:new b("symbol-conversion:unsupported-2d-symbol",`2D symbol of type '${e.type||e.declaredClass}' is unsupported in 3D`,{symbol:e})};n=t?M.fromTextSymbol(e):y.fromTextSymbol(e)}if(r&&n&&n.type!=="cim"&&(n.id=e.id),o&&c(n))for(let l=0;l<n.symbolLayers.length;++l)n.symbolLayers.getItemAt(l)._ignoreDrivers=!0;return{symbol:n}}function S(e,s,r,o){const t=g(e,{},{context:o,isLabelSymbol:!1});f(t)&&(s[r]=t)}function W(e,s,r,o){const t=g(e,{},{context:o,isLabelSymbol:!0});f(t)&&(s[r]=t)}function u(e){return e instanceof k||e instanceof d}function g(e,s,r){if(T(e))return null;const{context:o,isLabelSymbol:t}=r,m=o==null?void 0:o.origin,n=o==null?void 0:o.messages;if(m==="web-scene"&&!u(e)){const i=P(e,{retainCIM:!0,hasLabelingContext:t});return f(i.symbol)?i.symbol.write(s,o):(n==null||n.push(new b("symbol:unsupported",`Symbols of type '${e.declaredClass}' are not supported in scenes. Use 3D symbology instead when working with WebScene and SceneView`,{symbol:e,context:o,error:i.error})),null)}return(m==="web-map"||m==="portal-item"&&!F(o==null?void 0:o.layer))&&u(e)?(n==null||n.push(new b("symbol:unsupported",`Symbols of type '${e.declaredClass}' are not supported in web maps and portal items. Use 2D symbology and CIMSymbol instead when working with MapView`,{symbol:e,context:o})),null):e.write(s,o)}function _(e,s){return v(e,null,s)}export{W as a,S as m,_ as y};

import{b as K}from"./asyncUtils-d59cad3c.js";import{s as X,a as d}from"./Error-9392329b.js";import{t as v,A as Y,r as x,i as L}from"./typedArrayUtil-c81d173a.js";import{y as A,w as O,E as ee}from"./promiseUtils-3ce2a460.js";import{w as D,$ as g,M as te}from"./Extent-52b65909.js";import{u as q,m as ie}from"./Polyline-7f90e3cc.js";import{_ as I,r as $}from"./projection-03688518.js";import{f as U,u as W,w as ne,c as se,R as Z}from"./aaBoundingRect-062d7c89.js";import"./geometry-8c15a791.js";import"./string-bf9c68ed.js";import{t as Q}from"./TileInfo-3f2956cd.js";import"./cast-4d1aa82d.js";import"./ensureType-8c80e8c7.js";import"./nextTick-3ee5a785.js";import"./preload-helper-41c905a7.js";import"./mathUtils-505ef34b.js";import"./SimpleObservable-7e8b69a3.js";import"./mat4-63147b80.js";import"./assets-86d142ff.js";import"./request-16c6134d.js";import"./zscale-92e5f59b.js";import"./typeUtils-f38bdb16.js";const M=X.getLogger("esri.layers.support.ElevationSampler");class B{queryElevation(e){return ae(e.clone(),this)}on(){return ue}projectIfRequired(e,t){return H(e,t)}}class oe extends B{get spatialReference(){return this.extent.spatialReference}constructor(e,t,i){super(),this.tile=e,this.noDataValue=i;const n=e.tile.extent;this.extent=U(n,t.spatialReference),this.extent.zmin=e.zmin,this.extent.zmax=e.zmax,this._aaExtent=n;const o=g(t.spatialReference),s=t.lodAt(e.tile.level).resolution*o;this.demResolution={min:s,max:s}}contains(e){const t=this.projectIfRequired(e,this.spatialReference);return!v(t)&&this.containsAt(t.x,t.y)}containsAt(e,t){return ne(this._aaExtent,e,t)}elevationAt(e,t){if(!this.containsAt(e,t)){const i=this.extent,n=`${i.xmin}, ${i.ymin}, ${i.xmax}, ${i.ymax}`;return M.warn("#elevationAt()",`Point used to sample elevation (${e}, ${t}) is outside of the sampler extent (${n})`),this.noDataValue}return Y(this.tile.sample(e,t),this.noDataValue)}}class G extends B{get spatialReference(){return this.extent.spatialReference}constructor(e,t,i){let n;super(),typeof t=="number"?(this.noDataValue=t,n=null):(n=t,this.noDataValue=i),this.samplers=n?e.map(s=>new oe(s,n,this.noDataValue)):e;const o=this.samplers[0];if(o){this.extent=o.extent.clone();const{min:s,max:l}=o.demResolution;this.demResolution={min:s,max:l};for(let a=1;a<this.samplers.length;a++){const r=this.samplers[a];this.extent.union(r.extent),this.demResolution.min=Math.min(this.demResolution.min,r.demResolution.min),this.demResolution.max=Math.max(this.demResolution.max,r.demResolution.max)}}else this.extent=U(W(),n.spatialReference),this.demResolution={min:0,max:0}}elevationAt(e,t){for(const i of this.samplers)if(i.containsAt(e,t))return i.elevationAt(e,t);return M.warn("#elevationAt()",`Point used to sample elevation (${e}, ${t}) is outside of the sampler`),this.noDataValue}}function ae(c,e){const t=H(c,e.spatialReference);if(!t)return null;switch(c.type){case"point":le(c,t,e);break;case"polyline":re(c,t,e);break;case"multipoint":ce(c,t,e)}return c}function H(c,e){if(v(c))return null;const t=c.spatialReference;if(t.equals(e))return c;const i=te(c,e);return i||M.error(`Cannot project geometry spatial reference (wkid:${t.wkid}) to elevation sampler spatial reference (wkid:${e.wkid})`),i}function le(c,e,t){c.z=t.elevationAt(e.x,e.y)}function re(c,e,t){y.spatialReference=e.spatialReference;const i=c.hasM&&!c.hasZ;for(let n=0;n<c.paths.length;n++){const o=c.paths[n],s=e.paths[n];for(let l=0;l<o.length;l++){const a=o[l],r=s[l];y.x=r[0],y.y=r[1],i&&(a[3]=a[2]),a[2]=t.elevationAt(y.x,y.y)}}c.hasZ=!0}function ce(c,e,t){y.spatialReference=e.spatialReference;const i=c.hasM&&!c.hasZ;for(let n=0;n<c.points.length;n++){const o=c.points[n],s=e.points[n];y.x=s[0],y.y=s[1],i&&(o[3]=o[2]),o[2]=t.elevationAt(y.x,y.y)}c.hasZ=!0}const y=new D,ue={remove(){}};class he{constructor(e,t){this.data=e,this.safeWidth=.99999999*(e.width-1),this.dx=(e.width-1)/(t[2]-t[0]),this.dy=(e.width-1)/(t[3]-t[1]),this.x0=t[0],this.y1=t[3]}}class j{constructor(e,t=null){if(this.tile=e,x(t)&&x(e)){const i=e.extent;this._samplerData=new he(t,i)}}get zmin(){return x(this._samplerData)?this._samplerData.data.minValue:0}get zmax(){return x(this._samplerData)?this._samplerData.data.maxValue:0}sample(e,t){if(v(this._samplerData))return;const{safeWidth:i,data:n,dx:o,dy:s,y1:l,x0:a}=this._samplerData,{width:r,values:u,noDataValue:m}=n,p=P(s*(l-t),0,i),h=P(o*(e-a),0,i),C=Math.floor(p),F=Math.floor(h),_=C*r+F,z=_+r,R=u[_],E=u[z],S=u[_+1],V=u[z+1];if(R!==m&&E!==m&&S!==m&&V!==m){const b=h-F,k=R+(S-R)*b;return k+(E+(V-E)*b-k)*(p-C)}}}function P(c,e,t){return c<e?e:c>t?t:c}class be{async queryAll(e,t,i){if(!(e=i&&i.ignoreInvisibleLayers?e.filter(r=>r.visible):e.slice()).length)throw new d("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");const n=T.fromGeometry(t);let o=!1;i&&i.returnSampleInfo||(o=!0);const s={...w,...i,returnSampleInfo:!0},l=await this.query(e[e.length-1],n,s),a=await this._queryAllContinue(e,l,s);return a.geometry=a.geometry.export(),o&&delete a.sampleInfo,a}async query(e,t,i){if(!e)throw new d("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||!(t instanceof T)&&t.type!=="point"&&t.type!=="multipoint"&&t.type!=="polyline")throw new d("elevation-query:invalid-geometry","Only point, polyline and multipoint geometries can be used to query elevation");const n={...w,...i},o=new pe(e,t.spatialReference,n),s=n.signal;return await e.load({signal:s}),await this._createGeometryDescriptor(o,t,s),await this._selectTiles(o,s),await this._populateElevationTiles(o,s),this._sampleGeometryWithElevation(o),this._createQueryResult(o,s)}async createSampler(e,t,i){if(!e)throw new d("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||t.type!=="extent")throw new d("elevation-query:invalid-extent","Invalid or undefined extent");const n={...w,...i};return this._createSampler(e,t,n)}async createSamplerAll(e,t,i){if(!(e=i&&i.ignoreInvisibleLayers?e.filter(s=>s.visible):e.slice()).length)throw new d("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");if(!t||t.type!=="extent")throw new d("elevation-query:invalid-extent","Invalid or undefined extent");const n={...w,...i,returnSampleInfo:!0},o=await this._createSampler(e[e.length-1],t,n);return this._createSamplerAllContinue(e,t,o,n)}async _createSampler(e,t,i,n){const o=i.signal;await e.load({signal:o});const s=t.spatialReference,l=e.tileInfo.spatialReference;s.equals(l)||(await I([{source:s,dest:l}],{signal:o}),t=$(t,l));const a=new me(e,t,i,n);return await this._selectTiles(a,o),await this._populateElevationTiles(a,o),new G(a.elevationTiles,a.layer.tileInfo,a.options.noDataValue)}async _createSamplerAllContinue(e,t,i,n){if(e.pop(),!e.length)return i;const o=i.samplers.map(r=>se(r.extent)),s=await this._createSampler(e[e.length-1],t,n,o);if(s.samplers.length===0)return i;const l=i.samplers.concat(s.samplers),a=new G(l,n.noDataValue);return this._createSamplerAllContinue(e,t,a,n)}async _queryAllContinue(e,t,i){const n=e.pop(),o=t.geometry.coordinates,s=t.sampleInfo;L(s);const l=[],a=[];for(let p=0;p<o.length;p++){const h=s[p];h.demResolution>=0?h.source||(h.source=n):e.length&&(l.push(o[p]),a.push(p))}if(!e.length||l.length===0)return t;const r=t.geometry.clone(l),u=await this.query(e[e.length-1],r,i),m=u.sampleInfo;if(!m)throw new Error("no sampleInfo");return a.forEach((p,h)=>{o[p].z=u.geometry.coordinates[h].z,s[p].demResolution=m[h].demResolution}),this._queryAllContinue(e,t,i)}async _createQueryResult(e,t){const i=await e.geometry.project(e.outSpatialReference,t);L(i);const n={geometry:i.export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(n.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach(o=>{o.tile=null,o.elevationTile=null}),n}async _createGeometryDescriptor(e,t,i){let n;const o=e.layer.tileInfo.spatialReference;if(t instanceof T?n=await t.project(o,i):(await I([{source:t.spatialReference,dest:o}],{signal:i}),n=$(t,o)),!n)throw new d("elevation-query:spatial-reference-mismatch",`Cannot query elevation in '${t.spatialReference.wkid}' on an elevation service in '${o.wkid}'`);e.geometry=T.fromGeometry(n)}async _selectTiles(e,t){const i=e.options.demResolution;if(e.type==="geometry"&&this._preselectOutsideLayerExtent(e),typeof i=="number")this._selectTilesClosestResolution(e);else if(i==="finest-contiguous")await this._selectTilesFinestContiguous(e,t);else{if(i!=="auto")throw new d("elevation-query:invalid-dem-resolution",`Invalid dem resolution value '${i}', expected a number, "finest-contiguous" or "auto"`);await this._selectTilesAuto(e,t)}}_preselectOutsideLayerExtent(e){if(v(e.layer.fullExtent))return;const t=new j(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const i=e.layer.fullExtent;e.geometry.coordinates.forEach(n=>{const o=n.x,s=n.y;(o<i.xmin||o>i.xmax||s<i.ymin||s>i.ymax)&&(n.elevationTile=t)})}_selectTilesClosestResolution(e){const t=e.layer.tileInfo,i=this._findNearestDemResolutionLODIndex(t,e.options.demResolution);e.selectTilesAtLOD(i)}_findNearestDemResolutionLODIndex(e,t){const i=t/g(e.spatialReference);let n=e.lods[0],o=0;for(let s=1;s<e.lods.length;s++){const l=e.lods[s];Math.abs(l.resolution-i)<Math.abs(n.resolution-i)&&(n=l,o=s)}return o}async _selectTilesFinestContiguous(e,t){const i=N(e.layer.tileInfo,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,i,t)}async _selectTilesFinestContiguousAt(e,t,i){const n=e.layer;if(e.selectTilesAtLOD(t),t<0)return;const o=n.tilemapCache,s=e.getTilesToFetch();try{if(o)await A(Promise.all(s.map(l=>o.fetchAvailability(l.level,l.row,l.col,{signal:i}))),i);else if(await this._populateElevationTiles(e,i),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new d("elevation-query:has-unavailable-tiles")}catch(l){O(l),await this._selectTilesFinestContiguousAt(e,t-1,i)}}async _populateElevationTiles(e,t){const i=e.getTilesToFetch(),n={},o=e.options.cache,s=e.options.noDataValue,l=i.map(async a=>{if(a.id==null)return;const r=`${e.layer.uid}:${a.id}:${s}`,u=x(o)?o.get(r):null,m=x(u)?u:await e.layer.fetchTile(a.level,a.row,a.col,{noDataValue:s,signal:t});x(o)&&o.put(r,m),n[a.id]=new j(a,m)});await A(ee(l),t),e.populateElevationTiles(n)}async _selectTilesAuto(e,t){this._selectTilesAutoFinest(e),this._reduceTilesForMaximumRequests(e);const i=e.layer.tilemapCache;if(!i)return this._selectTilesAutoPrefetchUpsample(e,t);const n=e.getTilesToFetch(),o={},s=n.map(async l=>{const a=new Q(null,0,0,0,W()),r=await K(i.fetchAvailabilityUpsample(l.level,l.row,l.col,a,{signal:t}));r.ok!==!1?l.id!=null&&(o[l.id]=a):O(r.error)});await A(Promise.all(s),t),e.remapTiles(o)}_reduceTilesForMaximumRequests(e){const t=e.layer.tileInfo;let i=0;const n={},o=a=>{a.id!=null&&(a.id in n?n[a.id]++:(n[a.id]=1,i++))},s=a=>{if(a.id==null)return;const r=n[a.id];r===1?(delete n[a.id],i--):n[a.id]=r-1};e.forEachTileToFetch(o,s);let l=!0;for(;l&&(l=!1,e.forEachTileToFetch(a=>{i<=e.options.maximumAutoTileRequests||(s(a),t.upsampleTile(a)&&(l=!0),o(a))},s),l););}_selectTilesAutoFinest(e){const t=N(e.layer.tileInfo,e.options.minDemResolution);e.selectTilesAtLOD(t,e.options.maximumAutoTileRequests)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await this._populateElevationTiles(e,t);let n=!1;e.forEachTileToFetch((o,s)=>{i.upsampleTile(o)?n=!0:s()}),n&&await this._selectTilesAutoPrefetchUpsample(e,t)}_sampleGeometryWithElevation(e){e.geometry.coordinates.forEach(t=>{const i=t.elevationTile;let n=e.options.noDataValue;if(i){const o=i.sample(t.x,t.y);x(o)?n=o:t.elevationTile=null}t.z=n})}_extractSampleInfo(e){const t=e.layer.tileInfo,i=g(t.spatialReference);return e.geometry.coordinates.map(n=>{let o=-1;return n.elevationTile&&n.elevationTile!==e.outsideExtentTile&&(o=t.lodAt(n.elevationTile.tile.level).resolution*i),{demResolution:o}})}}class T{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new T;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map(i=>i.clone()),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await I([{source:this.spatialReference,dest:e}],{signal:t});const i=new q({spatialReference:this.spatialReference,points:this.coordinates.map(l=>[l.x,l.y])}),n=$(i,e);if(!n)return null;const o=this.coordinates.map((l,a)=>{const r=l.clone(),u=n.points[a];return r.x=u[0],r.y=u[1],r}),s=this.clone(o);return s.spatialReference=e,s}static fromGeometry(e){const t=new T;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof T)t.coordinates=e.coordinates.map(i=>i.clone()),t._exporter=(i,n)=>{const o=e.clone(i);return o.spatialReference=n,o};else switch(e.type){case"point":{const i=e,{hasZ:n,hasM:o}=i;t.coordinates=n&&o?[new f(i.x,i.y,i.z,i.m)]:n?[new f(i.x,i.y,i.z)]:o?[new f(i.x,i.y,null,i.m)]:[new f(i.x,i.y)],t._exporter=(s,l)=>e.hasM?new D(s[0].x,s[0].y,s[0].z,s[0].m,l):new D(s[0].x,s[0].y,s[0].z,l);break}case"multipoint":{const i=e,{hasZ:n,hasM:o}=i;t.coordinates=n&&o?i.points.map(s=>new f(s[0],s[1],s[2],s[3])):n?i.points.map(s=>new f(s[0],s[1],s[2])):o?i.points.map(s=>new f(s[0],s[1],null,s[2])):i.points.map(s=>new f(s[0],s[1])),t._exporter=(s,l)=>e.hasM?new q({points:s.map(a=>[a.x,a.y,a.z,a.m]),hasZ:!0,hasM:!0,spatiaReference:l}):new q(s.map(a=>[a.x,a.y,a.z]),l);break}case"polyline":{const i=e,n=[],o=[],{hasZ:s,hasM:l}=e;let a=0;for(const r of i.paths)if(o.push([a,a+r.length]),a+=r.length,s&&l)for(const u of r)n.push(new f(u[0],u[1],u[2],u[3]));else if(s)for(const u of r)n.push(new f(u[0],u[1],u[2]));else if(l)for(const u of r)n.push(new f(u[0],u[1],null,u[2]));else for(const u of r)n.push(new f(u[0],u[1]));t.coordinates=n,t._exporter=(r,u)=>{const m=e.hasM?r.map(h=>[h.x,h.y,h.z,h.m]):r.map(h=>[h.x,h.y,h.z]),p=o.map(h=>m.slice(h[0],h[1]));return new ie({paths:p,hasM:e.hasM,hasZ:!0,spatialReference:u})};break}}return t}}class f{constructor(e,t,i=null,n=null,o=null,s=null){this.x=e,this.y=t,this.z=i,this.m=n,this.tile=o,this.elevationTile=s}clone(){return new f(this.x,this.y,this.z,this.m)}}class J{constructor(e,t){this.layer=e,this.options=t}}class pe extends J{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type="geometry"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach(t=>{t.tile=null});else{const t=this.layer.tileInfo,i=t.lods[e].level;this.geometry.coordinates.forEach(n=>{n.tile=t.tileAt(i,n.x,n.y)})}}allElevationTilesFetched(){return!this.geometry.coordinates.some(e=>!e.elevationTile)}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){var t;for(const i of this.geometry.coordinates)!i.elevationTile&&((t=i.tile)!=null&&t.id)&&(i.elevationTile=e[i.tile.id])}remapTiles(e){var t;for(const i of this.geometry.coordinates){const n=(t=i.tile)==null?void 0:t.id;i.tile=n?e[n]:null}}getTilesToFetch(){var i;const e={},t=[];for(const n of this.geometry.coordinates){const o=n.tile;if(!o)continue;const s=(i=n.tile)==null?void 0:i.id;n.elevationTile||!s||e[s]||(e[s]=o,t.push(o))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,()=>{t.tile=null})}}class me extends J{constructor(e,t,i,n){super(e,i),this.type="extent",this.elevationTiles=[],this._candidateTiles=[],this._fetchedCandidates=new Set,this.extent=t.intersection(e.fullExtent),this.maskExtents=n}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),n=Math.min(i,e);n<0?this._candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(n)}_maximumLodForRequests(e){const t=this.layer.tileInfo;if(!e)return t.lods.length-1;const i=this.extent;if(v(i))return-1;for(let n=t.lods.length-1;n>=0;n--){const o=t.lods[n],s=o.resolution*t.size[0],l=o.resolution*t.size[1];if(Math.ceil(i.width/s)*Math.ceil(i.height/l)<=e)return n}return-1}allElevationTilesFetched(){return this._candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this._fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this._candidateTiles){const i=t.id&&e[t.id];i&&(this._fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles.map(t=>e[t.id]))}getTilesToFetch(){return this._candidateTiles}forEachTileToFetch(e,t){const i=this._candidateTiles;this._candidateTiles=[],i.forEach(n=>{if(this._fetchedCandidates.has(n))return void(t&&t(n));let o=!1;e(n,()=>o=!0),o?t&&t(n):this._candidateTiles.push(n)}),this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles,t)}_uniqueNonOverlappingTiles(e,t){const i={},n=[];for(const s of e){const l=s.id;l&&!i[l]?(i[l]=s,n.push(s)):t&&t(s)}const o=n.sort((s,l)=>s.level-l.level);return o.filter((s,l)=>{for(let a=0;a<l;a++){const r=o[a].extent;if(r&&s.extent&&Z(r,s.extent))return t&&t(s),!1}return!0})}_selectCandidateTilesCoveringExtentAt(e){this._candidateTiles.length=0;const t=this.extent;if(v(t))return;const i=this.layer.tileInfo,n=i.lods[e],o=i.tileAt(n.level,t.xmin,t.ymin),s=o.extent;if(v(s))return;const l=n.resolution*i.size[0],a=n.resolution*i.size[1],r=Math.ceil((t.xmax-s[0])/l),u=Math.ceil((t.ymax-s[1])/a);for(let m=0;m<u;m++)for(let p=0;p<r;p++){const h=new Q(null,o.level,o.row-m,o.col+p);i.updateTileInfo(h),this._tileIsMasked(h)||this._candidateTiles.push(h)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some(t=>e.extent&&Z(t,e.extent))}}function N(c,e=0){let t=c.lods.length-1;if(e>0){const i=e/g(c.spatialReference),n=c.lods.findIndex(o=>o.resolution<i);n===0?t=0:n>0&&(t=n-1)}return t}const w={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:"auto",minDemResolution:0};export{be as ElevationQuery,T as GeometryDescriptor,N as getFinestLodIndex};

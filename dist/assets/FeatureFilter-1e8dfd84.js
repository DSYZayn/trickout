import{s as l,a as d}from"./Error-9392329b.js";import{t as _}from"./typedArrayUtil-c81d173a.js";import{u as c}from"./aaBoundingRect-062d7c89.js";import{c as u}from"./Polyline-7f90e3cc.js";import{v as y,n as f}from"./timeSupport-d42271eb.js";import{J as w}from"./utils-d7628e4e.js";import{x as I}from"./Query-8c2b9d22.js";import{p as b}from"./FeatureStore2D-4ffcbbf1.js";import{_ as T}from"./preload-helper-101896b7.js";import"./string-bf9c68ed.js";import"./mathUtils-505ef34b.js";import"./Extent-52b65909.js";import"./cast-4d1aa82d.js";import"./ensureType-8c80e8c7.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-3ce2a460.js";import"./jsonUtils-e2434b33.js";import"./featureConversionUtils-93a98860.js";import"./aaBoundingBox-55a55434.js";import"./OptimizedFeature-6361f5d1.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./projectionSupport-26ba0ab6.js";import"./projection-676f1424.js";import"./SimpleObservable-7e8b69a3.js";import"./mat4-63147b80.js";import"./assets-2d98ef96.js";import"./request-429c0e66.js";import"./zscale-92e5f59b.js";import"./json-48e3ea08.js";import"./normalizeUtils-78f35d29.js";import"./normalizeUtilsCommon-42c6cdb7.js";import"./geometry-8c15a791.js";import"./typeUtils-f38bdb16.js";import"./TimeExtent-0fb637c6.js";import"./enumeration-de0a766e.js";import"./Field-899dc481.js";import"./fieldType-68c65bf7.js";import"./Clonable-ad03ca71.js";import"./CircularArray-040b84c7.js";import"./Evented-d69b5d66.js";import"./rbush-f2a85c98.js";import"./quickselect-56c5966e.js";import"./diffUtils-ba6273ab.js";import"./Collection-54857936.js";import"./fieldUtils-7c95d0c6.js";import"./FeatureSetReader-0b7eb9fe.js";import"./arcadeTimeUtils-0a92beb1.js";import"./executionError-fb3f283a.js";import"./datetime-b6333958.js";import"./FieldsIndex-29a8df54.js";import"./TimeReference-d5a14980.js";import"./centroid-85944438.js";const p=l.getLogger("esri.views.2d.layers.features.support.whereUtils"),g={getAttribute:(s,t)=>s.field(t)};async function v(s,t){const e=await T(()=>import("./WhereClause-daac4082.js").then(i=>i.W),["assets/WhereClause-daac4082.js","assets/string-bf9c68ed.js","assets/typedArrayUtil-c81d173a.js","assets/executionError-fb3f283a.js","assets/datetime-b6333958.js"]);try{const i=e.WhereClause.create(s,t);if(!i.isStandardized){const r=new d("mapview - bad input","Unable to apply filter's definition expression, as expression is not standardized.",i);p.error(r)}return r=>{const h=r.readArcadeFeature();return i.testFeature(h,g)}}catch{return p.warn("mapview-bad-where-clause","Encountered an error when evaluating where clause",s),r=>!0}}const a=1,E=2;class vt{constructor(t){this._geometryBounds=c(),this._idToVisibility=new Map,this._serviceInfo=t}get hash(){return this._hash}check(t){return this._applyFilter(t)}clear(){const t=this._resetAllHiddenIds();return this.update(),{show:t,hide:[]}}invalidate(){this._idToVisibility.forEach((t,e)=>{this._idToVisibility.set(e,0)})}setKnownIds(t){for(const e of t)this._idToVisibility.set(e,a)}setTrue(t){const e=[],i=[],r=new Set(t);return this._idToVisibility.forEach((h,o)=>{const m=!!(this._idToVisibility.get(o)&a),n=r.has(o);!m&&n?e.push(o):m&&!n&&i.push(o),this._idToVisibility.set(o,n?a|E:0)}),{show:e,hide:i}}createQuery(){const{geometry:t,spatialRel:e,where:i,timeExtent:r,objectIds:h}=this;return I.fromJSON({geometry:t,spatialRel:e,where:i,timeExtent:r,objectIds:h})}async update(t,e){this._hash=JSON.stringify(t);const i=await w(t,null,e);await Promise.all([this._setGeometryFilter(i),this._setIdFilter(i),this._setAttributeFilter(i),this._setTimeFilter(i)])}async _setAttributeFilter(t){if(!t||!t.where)return this._clause=null,void(this.where=null);this._clause=await v(t.where,this._serviceInfo.fieldsIndex),this.where=t.where}_setIdFilter(t){this._idsToShow=t&&t.objectIds&&new Set(t.objectIds),this._idsToHide=t&&t.hiddenIds&&new Set(t.hiddenIds),this.objectIds=t&&t.objectIds}async _setGeometryFilter(t){if(!t||!t.geometry)return this._spatialQueryOperator=null,this.geometry=null,void(this.spatialRel=null);const e=t.geometry,i=t.spatialRel||"esriSpatialRelIntersects",r=await y(i,e,this._serviceInfo.geometryType,this._serviceInfo.hasZ,this._serviceInfo.hasM);u(this._geometryBounds,e),this._spatialQueryOperator=r,this.geometry=e,this.spatialRel=i}_setTimeFilter(t){if(this.timeExtent=this._timeOperator=null,t&&t.timeExtent)if(this._serviceInfo.timeInfo)this.timeExtent=t.timeExtent,this._timeOperator=f(this._serviceInfo.timeInfo,t.timeExtent,b);else{const e=new d("feature-layer-view:time-filter-not-available","Unable to apply time filter, as layer doesn't have time metadata.",t.timeExtent);l.getLogger("esri.views.2d.layers.features.controllers.FeatureFilter").error(e)}}_applyFilter(t){return this._filterByGeometry(t)&&this._filterById(t)&&this._filterByTime(t)&&this._filterByExpression(t)}_filterByExpression(t){return!this.where||this._clause(t)}_filterById(t){return(!this._idsToHide||!this._idsToHide.size||!this._idsToHide.has(t.getObjectId()))&&(!this._idsToShow||!this._idsToShow.size||this._idsToShow.has(t.getObjectId()))}_filterByGeometry(t){if(!this.geometry)return!0;const e=t.readHydratedGeometry();return!!e&&this._spatialQueryOperator(e)}_filterByTime(t){return!!_(this._timeOperator)||this._timeOperator(t)}_resetAllHiddenIds(){const t=[];return this._idToVisibility.forEach((e,i)=>{e&a||(this._idToVisibility.set(i,a),t.push(i))}),t}}export{vt as default};

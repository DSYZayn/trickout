import{l as c}from"./CollectionFlattener-8de7cbfd.js";import{e as l,y as h,a as m}from"./cast-4d1aa82d.js";import{j as u}from"./Collection-54857936.js";import{n as f}from"./collectionUtils-cc5781ab.js";import{s as d}from"./Error-9392329b.js";import{C as b}from"./promiseUtils-3ce2a460.js";import"./ensureType-8c80e8c7.js";import"./typedArrayUtil-c81d173a.js";import{b as g}from"./Layer-3cc844b0.js";function B(n){return new c({getCollections:()=>[n.tables,n.layers],getChildrenFunction:a=>{const s=[];return"tables"in a&&s.push(a.tables),"layers"in a&&s.push(a.layers),s},itemFilterFunction:a=>{const s=a.parent;return!!s&&"tables"in s&&s.tables.includes(a)}})}function y(n,a,s){let e,t;if(n)for(let o=0,i=n.length;o<i;o++){if(e=n.getItemAt(o),e[a]===s)return e;if((e==null?void 0:e.type)==="group"&&(t=y(e.layers,a,s),t))return t}}const T=n=>{let a=class extends n{constructor(...e){super(...e),this.layers=new u;const t=r=>{r.parent&&"remove"in r.parent&&r.parent.remove(r)},o=r=>{r.parent=this,this.layerAdded(r),r.type!=="elevation"&&r.type!=="base-elevation"||d.getLogger(this.declaredClass).error(`Layer 'title:${r.title}, id:${r.id}' of type '${r.type}' is not supported as an operational layer and will therefore be ignored.`)},i=r=>{r.parent=null,this.layerRemoved(r)};this.layers.on("before-add",r=>t(r.item)),this.layers.on("after-add",r=>o(r.item)),this.layers.on("after-remove",r=>i(r.item))}destroy(){const e=this.layers.removeAll();for(const t of e)this.layerRemoved(t),t.destroy();this.layers.destroy()}set layers(e){this._set("layers",f(e,this._get("layers")))}add(e,t){const o=this.layers;if(t=o.getNextIndex(t),e instanceof g){const i=e;i.parent===this?this.reorder(i,t):o.add(i,t)}else b(e)?e.then(i=>{this.destroyed||this.add(i,t)}):d.getLogger(this.declaredClass).error("#add()","The item being added is not a Layer or a Promise that resolves to a Layer.")}addMany(e,t){const o=this.layers;let i=o.getNextIndex(t);e.slice().forEach(r=>{r.parent!==this?(o.add(r,i),i+=1):this.reorder(r,i)})}findLayerById(e){return y(this.layers,"id",e)}findLayerByUid(e){return y(this.layers,"uid",e)}remove(e){return this.layers.remove(e)}removeMany(e){return this.layers.removeMany(e)}removeAll(){return this.layers.removeAll()}reorder(e,t){return this.layers.reorder(e,t)}layerAdded(e){}layerRemoved(e){}};return l([h()],a.prototype,"layers",null),a=l([m("esri.support.LayersMixin")],a),a};function p(n,a,s){if(n)for(let e=0,t=n.length;e<t;e++){const o=n.getItemAt(e);if(o[a]===s)return o;if((o==null?void 0:o.type)==="group"){const i=p(o.tables,a,s);if(i)return i}}}const F=n=>{let a=class extends n{constructor(...s){super(...s),this.tables=new u,this.tables.on("after-add",e=>{const t=e.item;t.parent&&t.parent!==this&&"tables"in t.parent&&t.parent.tables.remove(t),t.parent=this,t.type!=="feature"&&d.getLogger(this.declaredClass).error(`Layer 'title:${t.title}, id:${t.id}' of type '${t.type}' is not supported as a table and will therefore be ignored.`)}),this.tables.on("after-remove",e=>{e.item.parent=null})}destroy(){const s=this.tables.removeAll();for(const e of s)e.destroy();this.tables.destroy()}set tables(s){this._set("tables",f(s,this._get("tables")))}findTableById(s){return p(this.tables,"id",s)}findTableByUid(s){return p(this.tables,"uid",s)}};return l([h()],a.prototype,"tables",null),a=l([m("esri.support.TablesMixin")],a),a};export{T as d,F as l,B as t};

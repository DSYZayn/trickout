import{j as l}from"./asyncUtils-d59cad3c.js";import{a as n,s as g}from"./Error-9392329b.js";import{r as _,e as f}from"./typedArrayUtil-c81d173a.js";import{f as m,j as d}from"./promiseUtils-3ce2a460.js";import{E as w,J as p}from"./Extent-52b65909.js";import{c as E,u as q}from"./featureConversionUtils-93a98860.js";import{g as F}from"./FeatureStore-41322a3e.js";import{g as x,f as S}from"./projectionSupport-26ba0ab6.js";import{e as T}from"./QueryEngine-603c9658.js";import{T as j,I}from"./geojson-434f7781.js";import{m as b}from"./sourceUtils-4330fcf0.js";import{K as C}from"./wfsUtils-de892eda.js";import{r as P}from"./FieldsIndex-29a8df54.js";import"./cast-4d1aa82d.js";import"./string-bf9c68ed.js";import"./ensureType-8c80e8c7.js";import"./nextTick-3ee5a785.js";import"./aaBoundingBox-55a55434.js";import"./mathUtils-505ef34b.js";import"./aaBoundingRect-062d7c89.js";import"./jsonUtils-e2434b33.js";import"./Polyline-7f90e3cc.js";import"./OptimizedFeature-6361f5d1.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./Evented-d69b5d66.js";import"./BoundsStore-a184d1ac.js";import"./PooledRBush-f7459720.js";import"./quickselect-56c5966e.js";import"./centroid-85944438.js";import"./utils-d7628e4e.js";import"./preload-helper-101896b7.js";import"./projection-676f1424.js";import"./SimpleObservable-7e8b69a3.js";import"./mat4-63147b80.js";import"./assets-2d98ef96.js";import"./request-429c0e66.js";import"./zscale-92e5f59b.js";import"./normalizeUtils-78f35d29.js";import"./normalizeUtilsCommon-42c6cdb7.js";import"./geometry-8c15a791.js";import"./typeUtils-f38bdb16.js";import"./json-48e3ea08.js";import"./MemCache-c220a92a.js";import"./QueryEngineResult-4352c5f8.js";import"./quantizationUtils-54fe414b.js";import"./ItemCache-28393d1d.js";import"./WhereClause-daac4082.js";import"./executionError-fb3f283a.js";import"./datetime-b6333958.js";import"./utils-717e8c9c.js";import"./generateRendererUtils-f872a1df.js";import"./enumeration-de0a766e.js";import"./fieldUtils-7c95d0c6.js";import"./QueryEngineCapabilities-42e44ded.js";import"./timeSupport-d42271eb.js";import"./Scheduler-05bc8017.js";import"./reactiveUtils-989a8d7f.js";import"./xmlUtils-444cb4c0.js";import"./Field-899dc481.js";import"./fieldType-68c65bf7.js";class Ut{constructor(){this._queryEngine=null,this._customParameters=null,this._snapshotFeatures=async t=>{const{objectIdField:e}=this._queryEngine,i=await C(this._getFeatureUrl??"",this._featureType.typeName,this._getFeatureOutputFormat,{customParameters:this._customParameters,dateFields:this._queryEngine.fieldsIndex.dateFields.map(r=>r.name),signal:t});await j(i),m(t);const s=I(i,{geometryType:this._queryEngine.geometryType,hasZ:!1,objectIdField:e});if(!w(this._queryEngine.spatialReference,p))for(const r of s)_(r.geometry)&&(r.geometry=E(x(q(r.geometry,this._queryEngine.geometryType,!1,!1),p,this._queryEngine.spatialReference)));let a=1;for(const r of s){const o={};b(this._fieldsIndex,o,r.attributes,!0),r.attributes=o,r.attributes[e]==null&&(r.objectId=r.attributes[e]=a++)}return s}}destroy(){var t;(t=this._queryEngine)==null||t.destroy(),this._queryEngine=null}async load(t,e){const{getFeatureUrl:i,getFeatureOutputFormat:s,spatialReference:a,fields:r,geometryType:o,featureType:u,objectIdField:h,customParameters:y}=t;this._featureType=u,this._customParameters=y,this._getFeatureUrl=i,this._getFeatureOutputFormat=s,this._fieldsIndex=new P(r),await this._checkProjection(a),m(e),this._queryEngine=new T({fields:r,geometryType:o,hasM:!1,hasZ:!1,objectIdField:h,spatialReference:a,timeInfo:null,featureStore:new F({geometryType:o,hasM:!1,hasZ:!1})});const c=await this._snapshotFeatures(f(e.signal));return this._queryEngine.featureStore.addMany(c),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async applyEdits(){throw new n("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(t,e.signal)}async queryFeatureCount(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(t,e.signal)}async queryObjectIds(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(t,e.signal)}async queryExtent(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(t,e.signal)}async querySnapping(t,e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(t,e.signal)}async refresh(t){var e;return this._customParameters=t,(e=this._snapshotTask)==null||e.abort(),this._snapshotTask=l(this._snapshotFeatures),this._snapshotTask.promise.then(i=>{this._queryEngine.featureStore.clear(),i&&this._queryEngine.featureStore.addMany(i)},i=>{this._queryEngine.featureStore.clear(),d(i)||g.getLogger("esri.layers.WFSLayer").error(new n("wfs-layer:getfeature-error","An error occurred during the GetFeature request",{error:i}))}),await this._waitSnapshotComplete(),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _checkProjection(t){try{await S(p,t)}catch{throw new n("unsupported-projection","Projection not supported",{spatialReference:t})}}}export{Ut as default};

import{e as V,y as v,a as z}from"./cast-4d1aa82d.js";import{U as F,a as W,v as U,e as H}from"./request-16c6134d.js";import{j as Y}from"./Collection-54857936.js";import{w as K,a as S,r as I,t as J}from"./typedArrayUtil-c81d173a.js";import{l as Q}from"./reactiveUtils-989a8d7f.js";import"./ensureType-8c80e8c7.js";import{w as L,a as $,f as j}from"./Extent-52b65909.js";import{r as k,t as X}from"./projection-03688518.js";import{b as D,g as Z,d as tt}from"./kmlUtils-fdae4a81.js";import{f as it}from"./normalizeUtils-08ce1e14.js";import{i as M}from"./GraphicsCollection-6cd24d14.js";import{T as et,S as rt,R as ot}from"./Bitmap-044822eb.js";import{a as at}from"./BitmapContainer-8540a11b.js";import{f as st,u as pt}from"./LayerView-f4777136.js";import{i as P}from"./GraphicContainer-3637f3e4.js";import{a as R}from"./GraphicsView2D-c3e93aa6.js";import{C as mt,$ as nt}from"./rasterProjectionHelper-2f2082da.js";import{n as lt}from"./WGLContainer-12d66f96.js";import{I as ht,o as ct}from"./RenderingContext-075c3eb6.js";import{P as T,G as E,D as q,L as G,Y as dt,V as gt,f as N}from"./enums-64ab819c.js";import{x as ut}from"./VertexArrayObject-2b4e90de.js";import{l as _t}from"./rasterUtils-699bb000.js";import{E as B}from"./Texture-5c56cee1.js";import"./string-bf9c68ed.js";import"./Error-9392329b.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-3ce2a460.js";import"./preload-helper-41c905a7.js";import"./Evented-d69b5d66.js";import"./SimpleObservable-7e8b69a3.js";import"./mathUtils-505ef34b.js";import"./mat4-63147b80.js";import"./Polyline-7f90e3cc.js";import"./assets-86d142ff.js";import"./zscale-92e5f59b.js";import"./PopupTemplate-7c042eda.js";import"./Clonable-ad03ca71.js";import"./fieldUtils-c41301b0.js";import"./geometry-8c15a791.js";import"./typeUtils-f38bdb16.js";import"./enumeration-de0a766e.js";import"./number-b98554af.js";import"./locale-30120714.js";import"./Identifiable-a49d7533.js";import"./aaBoundingBox-55a55434.js";import"./jsonUtils-714f7856.js";import"./UniqueValueRenderer-adb2594e.js";import"./symbols-426355d5.js";import"./CIMSymbol-33f517af.js";import"./Color-46910694.js";import"./colorUtils-639f4d25.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-a1e441cd.js";import"./persistableUrlUtils-abff3ce1.js";import"./collectionUtils-cc5781ab.js";import"./Portal-fe1a007c.js";import"./Loadable-e19fba09.js";import"./Promise-24c50191.js";import"./PortalGroup-45834c06.js";import"./PortalUser-8de15b25.js";import"./LegendOptions-6e5321d3.js";import"./diffUtils-ba6273ab.js";import"./colorRamps-6cc98f16.js";import"./sizeVariableUtils-d4870b0d.js";import"./Graphic-b6696507.js";import"./jsonUtils-e2434b33.js";import"./compilerUtils-db2fe354.js";import"./lengthUtils-320ae102.js";import"./jsonUtils-dfa282b7.js";import"./layerUtils-394e7a48.js";import"./styleUtils-6ef1c49e.js";import"./DictionaryLoader-7f74ef6b.js";import"./LRUCache-7d328c48.js";import"./MemCache-c220a92a.js";import"./deprecate-0efb6d09.js";import"./heatmapUtils-74b8fd48.js";import"./vec4f64-aa64c7e9.js";import"./FeatureSet-a47eef0a.js";import"./Field-899dc481.js";import"./fieldType-68c65bf7.js";import"./normalizeUtilsCommon-42c6cdb7.js";import"./HandleOwner-1ffa4597.js";import"./mat3-5b850236.js";import"./mat3f32-6c416b1c.js";import"./vec2f32-eaf29605.js";import"./Container-782a7f3a.js";import"./parser-7deabd3b.js";import"./definitions-19bfb61c.js";import"./context-util-2fc70f17.js";import"./enums-b1d611e3.js";import"./MyMap-cf7367ff.js";import"./Basemap-5520ad34.js";import"./loadAll-8b24919b.js";import"./asyncUtils-d59cad3c.js";import"./PortalItem-d79345ac.js";import"./messages-57170cca.js";import"./writeUtils-9e2bb9d7.js";import"./CollectionFlattener-8de7cbfd.js";import"./TablesMixin-54823533.js";import"./Layer-5bf3596f.js";import"./Cyclical-e9c94d8a.js";import"./workers-9e1006b9.js";import"./Connection-da262054.js";import"./Queue-4939205d.js";import"./intl-45f8f1a9.js";import"./TileInfo-3f2956cd.js";import"./aaBoundingRect-062d7c89.js";import"./widget-b2a8e375.js";import"./uuid-73213768.js";import"./byteSizeEstimations-90c5a50d.js";import"./AttachmentInfo-12f14212.js";import"./AttachmentQuery-dffd8fdc.js";import"./utils-285aaf9a.js";import"./ItemCache-28393d1d.js";import"./Query-8c2b9d22.js";import"./TimeExtent-0fb637c6.js";import"./executeQueryJSON-ad10aa61.js";import"./query-b41db307.js";import"./pbfQueryUtils-718fed42.js";import"./pbf-9196f6ce.js";import"./OptimizedFeature-6361f5d1.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-22ca074d.js";import"./featureConversionUtils-93a98860.js";import"./RelationshipQuery-80632d4c.js";import"./TopFeaturesQuery-e56e9bfe.js";import"./FeatureLayer-3b171605.js";import"./MultiOriginJSONSupport-55da1d06.js";import"./serviceCapabilitiesUtils-2296548c.js";import"./arcgisLayerUrl-824ee458.js";import"./FeatureLayerBase-ed16c570.js";import"./HeightModelInfo-a5f98ab4.js";import"./OperationalLayer-70e0771f.js";import"./ElevationInfo-5422702b.js";import"./TimeReference-d5a14980.js";import"./datetime-b6333958.js";import"./editsZScale-9447610d.js";import"./APIKeyMixin-35aced10.js";import"./ArcGISService-78831401.js";import"./BlendLayer-1f4ade52.js";import"./CustomParametersMixin-6e258788.js";import"./EditBusLayer-f379d91e.js";import"./FeatureReductionLayer-a890a60c.js";import"./labelingInfo-8ec658bf.js";import"./labelUtils-4db1d7ec.js";import"./defaultsJSON-b087dd4d.js";import"./OrderedLayer-9994883c.js";import"./PortalLayer-d4941bb0.js";import"./portalItemUtils-9126718d.js";import"./RefreshableLayer-2dcbbf25.js";import"./ScaleRangeLayer-a6967062.js";import"./TemporalLayer-76f9669f.js";import"./FeatureTemplate-136fba4c.js";import"./FeatureType-f3fd3327.js";import"./fieldProperties-cf15bacb.js";import"./FieldsIndex-b8dc9788.js";import"./versionUtils-0602c916.js";import"./styleUtils-30cd950e.js";import"./popupUtils-eff4732c.js";import"./mat2d-795519e1.js";import"./Scheduler-05bc8017.js";import"./ViewingMode-fb6259a5.js";import"./unitBezier-881ac1eb.js";import"./vec2-3a431caf.js";import"./vec2f64-22afc56f.js";import"./TileStrategy-cb3a7d25.js";import"./TileStore-4f504952.js";import"./TileKey-3acb01a1.js";import"./rbush-f2a85c98.js";import"./quickselect-56c5966e.js";import"./capabilities-55572a33.js";import"./WebTileLayer-cf969b4c.js";import"./imageBitmapUtils-86f741ce.js";import"./index-0970c694.js";import"./BaseGraphicContainer-1eb25f25.js";import"./FeatureContainer-2988c992.js";import"./AttributeStoreView-dcb739c3.js";import"./TiledDisplayObject-76821229.js";import"./visualVariablesUtils-f202191f.js";import"./color-349a3ca2.js";import"./enums-4b2a86a0.js";import"./VertexElementDescriptor-2925c6af.js";import"./visualVariablesUtils-904a1f06.js";import"./TileContainer-04cf618b.js";import"./utils-45a97d77.js";import"./MaterialKey-8f458904.js";import"./vec3f32-ad1dc57f.js";import"./ExpandedCIM-23a9d4d0.js";import"./BidiEngine-836b7ef6.js";import"./GeometryUtils-53652037.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-54fe414b.js";import"./floatRGBA-90587fc5.js";import"./normalizeUtilsSync-87c5ef07.js";import"./projectionSupport-6e748f70.js";import"./json-48e3ea08.js";import"./Matcher-38d3d28c.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-14d34b25.js";import"./GeometryUtils-dd03fc25.js";import"./earcut-61f7b102.js";import"./devEnvironmentUtils-5002a058.js";import"./schemaUtils-d9e5d320.js";import"./createSymbolSchema-8b7065b5.js";import"./rendererUtils-90c6d352.js";import"./util-54b675a7.js";import"./ComputedAttributeStorage-8962ca7e.js";import"./FeatureSetReader-a6554301.js";import"./arcadeTimeUtils-a56a27c9.js";import"./executionError-fb3f283a.js";import"./centroid-85944438.js";import"./ProgramTemplate-b518276b.js";import"./StyleDefinition-7d58136b.js";import"./config-1337d16e.js";import"./programUtils-aa53d847.js";import"./NestedMap-1b5db22e.js";import"./OrderIndependentTransparency-e1b3a745.js";import"./basicInterfaces-b7051eb1.js";import"./doublePrecisionUtils-e3c3d0d8.js";import"./webgl-debug-b1f7a2c5.js";class l{constructor(t){if(this._ownsRctx=!1,t)this._ownsRctx=!1,this._rctx=t;else{if(l._instance)return l._instanceRefCount++,l._instance;l._instanceRefCount=1,l._instance=this,this._ownsRctx=!0;const e=document.createElement("canvas").getContext("webgl");e.getExtension("OES_texture_float"),this._rctx=new ht(e,{})}const o={applyProjection:!0,bilinear:!1,bicubic:!1},a=ct("raster/reproject","raster/reproject",new Map([["a_position",0]]),o);this._program=this._rctx.programCache.acquire(a.shaders.vertexShader,a.shaders.fragmentShader,a.attributes),this._rctx.useProgram(this._program),this._program.setUniform1f("u_opacity",1),this._program.setUniform1i("u_image",0),this._program.setUniform1i("u_flipY",0),this._program.setUniform1i("u_transformGrid",1),this._quad=new lt(this._rctx,[0,0,1,0,0,1,1,1])}reprojectTexture(t,o,a=!1){const e=k(t.extent,o),r=new L({x:(t.extent.xmax-t.extent.xmin)/t.texture.descriptor.width,y:(t.extent.ymax-t.extent.ymin)/t.texture.descriptor.height,spatialReference:t.extent.spatialReference}),{x:s,y:m}=mt(r,o,t.extent);let n=(s+m)/2;const p=Math.round((e.xmax-e.xmin)/n),d=Math.round((e.ymax-e.ymin)/n);n=(e.width/p+e.height/d)/2;const C=new L({x:n,y:n,spatialReference:e.spatialReference}),w=nt({projectedExtent:e,srcBufferExtent:t.extent,pixelSize:C,hasWrapAround:!0,spacing:[16,16]}),f=_t(this._rctx,w),u=new B(this._rctx,{width:p,height:d,pixelFormat:T.RGBA,dataType:E.UNSIGNED_BYTE,wrapMode:q.CLAMP_TO_EDGE,samplingMode:G.LINEAR,hasMipmap:!1}),h=new ut(this._rctx,{colorTarget:dt.TEXTURE,depthStencilTarget:gt.NONE,width:p,height:d},u);this._rctx.bindFramebuffer(h),this._rctx.setViewport(0,0,p,d),this._rctx.useProgram(this._program),this._rctx.bindTexture(t.texture,0),this._rctx.bindTexture(f,1),this._quad.bind();const{width:x=0,height:y=0}=t.texture.descriptor;if(this._program.setUniform2f("u_srcImageSize",x,y),this._program.setUniform2fv("u_transformSpacing",w.spacing),this._program.setUniform2fv("u_transformGridSize",w.size),this._program.setUniform2f("u_targetImageSize",p,d),this._quad.draw(),this._quad.unbind(),this._rctx.useProgram(null),this._rctx.bindFramebuffer(null),f.dispose(),a){const{width:_=0,height:c=0}=h.descriptor,b=new ImageData(_,c);return h.readPixels(0,0,_,c,T.RGBA,E.UNSIGNED_BYTE,b.data),h.detachColorTexture(N.COLOR_ATTACHMENT0),h.dispose(),{texture:u,extent:e,imageData:b}}return h.detachColorTexture(N.COLOR_ATTACHMENT0),h.dispose(),{texture:u,extent:e}}reprojectBitmapData(t,o){const a=et(t.bitmapData)?rt(t.bitmapData):t.bitmapData,e=new B(this._rctx,{width:t.bitmapData.width,height:t.bitmapData.height,pixelFormat:T.RGBA,dataType:E.UNSIGNED_BYTE,wrapMode:q.CLAMP_TO_EDGE,samplingMode:G.LINEAR,hasMipmap:!1},a),r=this.reprojectTexture({texture:e,extent:t.extent},o,!0);r.texture.dispose();const s=document.createElement("canvas"),m=r.imageData;return s.width=m.width,s.height=m.height,s.getContext("2d").putImageData(m,0,0),{bitmapData:s,extent:r.extent}}async loadAndReprojectBitmapData(t,o,a){const e=(await F(t,{responseType:"image"})).data,r=document.createElement("canvas");r.width=e.width,r.height=e.height;const s=r.getContext("2d");s.drawImage(e,0,0);const m=s.getImageData(0,0,r.width,r.height);if(o.spatialReference.equals(a))return{bitmapData:m,extent:o};const n=this.reprojectBitmapData({bitmapData:m,extent:o},a);return{bitmapData:n.bitmapData,extent:n.extent}}destroy(){this._ownsRctx?(l._instanceRefCount--,l._instanceRefCount===0&&(this._quad.dispose(),this._program.dispose(),this._rctx.dispose(),l._instance=null)):(this._quad.dispose(),this._program.dispose())}}l._instanceRefCount=0;class O{constructor(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[]}}let g=class extends st(pt){constructor(){super(...arguments),this._bitmapIndex=new Map,this._mapImageContainer=new at,this._kmlVisualData=new O,this._fetchController=null,this.allVisiblePoints=new M,this.allVisiblePolylines=new M,this.allVisiblePolygons=new M,this.allVisibleMapImages=new Y}async hitTest(i,t){var a,e,r;const o=this.layer;return[(a=this._pointsView)==null?void 0:a.hitTest(i),(e=this._polylinesView)==null?void 0:e.hitTest(i),(r=this._polygonsView)==null?void 0:r.hitTest(i)].flat().filter(Boolean).map(s=>(s.layer=o,s.sourceLayer=o,{type:"graphic",graphic:s,layer:o,mapPoint:i}))}update(i){this._polygonsView&&this._polygonsView.processUpdate(i),this._polylinesView&&this._polylinesView.processUpdate(i),this._pointsView&&this._pointsView.processUpdate(i)}attach(){this._fetchController=new AbortController,this.container.addChild(this._mapImageContainer),this._polygonsView=new R({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new P(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new R({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new P(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new R({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new P(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.addAttachHandles([this.allVisibleMapImages.on("change",i=>{i.added.forEach(t=>this._addMapImage(t)),i.removed.forEach(t=>this._removeMapImage(t))}),Q(()=>this.layer.visibleSublayers,i=>{for(const[t,o]of this._kmlVisualData.allSublayers)o.visibility=0;for(const t of i){const o=this._kmlVisualData.allSublayers.get(t.id);o&&(o.visibility=1)}this._refreshCollections()})]),this.updatingHandles.addPromise(this._fetchService(this._fetchController.signal)),this._imageReprojector=new l}detach(){this._fetchController=K(this._fetchController),this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView=S(this._polygonsView),this._polylinesView=S(this._polylinesView),this._pointsView=S(this._pointsView),this._imageReprojector=S(this._imageReprojector)}moveStart(){}viewChange(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange()}moveEnd(){}isUpdating(){return this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating}_addMapImage(i){var t,o;((t=this.view.spatialReference)!=null&&t.isWGS84||(o=this.view.spatialReference)!=null&&o.isWebMercator)&&this._imageReprojector.loadAndReprojectBitmapData(i.href,$.fromJSON(i.extent),this.view.spatialReference).then(a=>{const e=new ot(a.bitmapData,{immutable:!1,requestRenderOnSourceChangedEnabled:!0});e.x=a.extent.xmin,e.y=a.extent.ymax,e.resolution=a.extent.width/a.bitmapData.width,e.rotation=i.rotation,this._mapImageContainer.addChild(e),this._bitmapIndex.set(i,e)})}async _getViewDependentUrl(i,t){const{viewFormat:o,viewBoundScale:a,httpQuery:e}=i;if(I(o)){if(J(t))throw new Error("Loading this network link requires a view state.");let r;if(await X(),I(a)&&a!==1){const c=new $(t.extent);c.expand(a),r=c}else r=t.extent;r=k(r,j.WGS84);const s=k(r,j.WebMercator),m=r.xmin,n=r.xmax,p=r.ymin,d=r.ymax,C=t.size[0]*t.pixelRatio,w=t.size[1]*t.pixelRatio,f=Math.max(s.width,s.height),u={"[bboxWest]":m.toString(),"[bboxEast]":n.toString(),"[bboxSouth]":p.toString(),"[bboxNorth]":d.toString(),"[lookatLon]":r.center.x.toString(),"[lookatLat]":r.center.y.toString(),"[lookatRange]":f.toString(),"[lookatTilt]":"0","[lookatHeading]":t.rotation.toString(),"[lookatTerrainLon]":r.center.x.toString(),"[lookatTerrainLat]":r.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":r.center.x.toString(),"[cameraLat]":r.center.y.toString(),"[cameraAlt]":f.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":C.toString(),"[vertPixels]":w.toString(),"[terrainEnabled]":"0","[clientVersion]":W,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"},h=c=>{for(const b in c)for(const A in u)c[b]=c[b].replace(A,u[A])},x=U(o);h(x);let y={};I(e)&&(y=U(e),h(y));const _=it(i.href);return _.query={..._.query,...x,...y},`${_.path}?${H(x)}`}return i.href}async _fetchService(i){const t=new O;await this._loadVisualData(this.layer.url,t,i),this._kmlVisualData=t,this._refreshCollections()}_refreshCollections(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i)),this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i)),this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i)),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i))}_isSublayerVisible(i){const t=this._kmlVisualData.allSublayers.get(i);return!!(t!=null&&t.visibility)&&(t.parentFolderId===-1||this._isSublayerVisible(t.parentFolderId))}_loadVisualData(i,t,o){return this._fetchParsedKML(i,o).then(async a=>{for(const e of a.sublayers){t.allSublayers.set(e.id,e);const r=e.points?await D(e.points):[],s=e.polylines?await D(e.polylines):[],m=e.polygons?await D(e.polygons):[],n=e.mapImages||[];if(t.allPoints.push(...r.map(p=>({item:p,sublayerId:e.id}))),t.allPolylines.push(...s.map(p=>({item:p,sublayerId:e.id}))),t.allPolygons.push(...m.map(p=>({item:p,sublayerId:e.id}))),t.allMapImages.push(...n.map(p=>({item:p,sublayerId:e.id}))),e.networkLink){const p=await this._getViewDependentUrl(e.networkLink,this.view.state);await this._loadVisualData(p,t,o)}}})}_fetchParsedKML(i,t){return Z(i,this.layer.spatialReference,this.layer.refreshInterval,t).then(o=>tt(o.data))}_removeMapImage(i){const t=this._bitmapIndex.get(i);t&&(this._mapImageContainer.removeChild(t),this._bitmapIndex.delete(i))}};V([v()],g.prototype,"_pointsView",void 0),V([v()],g.prototype,"_polylinesView",void 0),V([v()],g.prototype,"_polygonsView",void 0),V([v()],g.prototype,"updating",void 0),g=V([z("esri.views.2d.layers.KMLLayerView2D")],g);const Vo=g;export{Vo as default};
